// Code generated by go-bindata. DO NOT EDIT.
// sources:
// 000001_create_cache_table.down.sql (29B)
// 000001_create_cache_table.up.sql (403B)
// 000002_create_users_database.down.sql (28B)
// 000002_create_users_database.up.sql (566B)
// 000003_create_assistant_threads.down.sql (185B)
// 000003_create_assistant_threads.up.sql (3.768kB)
// 000004_assistant_embeddings_add_uuid.down.sql (62B)
// 000004_assistant_embeddings_add_uuid.up.sql (112B)
// 000005_create_new_bookmarks_tables.down.sql (163B)
// 000005_create_new_bookmarks_tables.up.sql (727B)
// 000006_set_embeddings_to_nullable.down.sql (115B)
// 000006_set_embeddings_to_nullable.up.sql (116B)
// 000007_new_auth_flows.down.sql (1.225kB)
// 000007_new_auth_flows.up.sql (6.277kB)
// 000008_comprehensive_bookmarks.down.sql (650B)
// 000008_comprehensive_bookmarks.up.sql (4.309kB)
// 000009_migrate_bookmarks_data.down.sql (0)
// 000009_migrate_bookmarks_data.up.sql (516B)
// 000010_share_content.down.sql (208B)
// 000010_share_content.up.sql (785B)
// 000011_create_s3_resources_mapping_table.down.sql (264B)
// 000011_create_s3_resources_mapping_table.up.sql (1.401kB)

package migrations

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __000001_create_cache_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe2\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\xf0\x74\x53\x70\x8d\xf0\x0c\x0e\x09\x56\x48\x4e\x4c\xce\x48\xb5\xe6\x02\x04\x00\x00\xff\xff\xf4\x50\x95\xa6\x1d\x00\x00\x00")

func _000001_create_cache_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__000001_create_cache_tableDownSql,
		"000001_create_cache_table.down.sql",
	)
}

func _000001_create_cache_tableDownSql() (*asset, error) {
	bytes, err := _000001_create_cache_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "000001_create_cache_table.down.sql", size: 29, mode: os.FileMode(0644), modTime: time.Unix(1721380493, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x75, 0xc8, 0xd7, 0x78, 0x48, 0x13, 0xad, 0x6a, 0x31, 0xc4, 0xce, 0x10, 0x7e, 0x95, 0xd3, 0xef, 0x2d, 0xed, 0x5, 0xc8, 0x9e, 0x58, 0x9f, 0x45, 0x48, 0xf4, 0x7e, 0x58, 0x61, 0xc0, 0xcc, 0xdf}}
	return a, nil
}

var __000001_create_cache_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\xbd\x4e\xc3\x30\x14\x85\xf7\x3c\xc5\x19\x1b\xa9\x5d\x90\x3a\x75\x72\xd3\x5b\x61\x70\x9c\xe2\x1f\xd4\x4e\x96\x89\x2d\x11\x51\x9a\x2a\x75\x10\xbc\x3d\x6a\x42\x07\x32\x20\xb1\xde\xef\x9c\x2b\x9d\x6f\xb1\x40\xd1\x45\x9f\x22\x3c\x92\x7f\x39\x46\xa4\x16\x97\xd4\x76\x11\xb5\xaf\x5f\x23\x82\x4f\x3e\x2b\x14\x31\x43\x30\x6c\x2d\x08\x7c\x0b\x59\x19\xd0\x9e\x6b\xa3\x7f\x52\xb3\x0c\x00\x9a\x00\x4d\x8a\x33\x81\x9d\xe2\x25\x53\x07\x3c\xd2\x61\x3e\xa0\xd0\xbe\xfb\xe6\x84\x67\xa6\x8a\x7b\xa6\x66\x77\xcb\x65\x3e\x7c\x91\x56\x88\x31\xf1\x16\xbf\xfe\xc2\x1f\xfe\xd8\x47\x3c\xe8\x4a\xae\x27\x24\x7e\x9e\x9b\x2e\x5e\x9c\x4f\x30\xbc\x24\x6d\x58\xb9\x1b\x49\x3d\x2c\x0b\xbf\x08\x36\xb4\x65\x56\x18\x14\x56\x29\x92\xc6\x4d\x3a\xfd\x39\xfc\xa3\x93\xe5\xab\xec\x66\xc7\x4a\xfe\x64\x09\x5c\x6e\x68\x3f\x91\xd4\x9f\x1a\x37\x88\x72\xa3\x07\x77\x1d\x5b\xc9\x9b\xbc\xf1\x38\xbf\x2a\xc8\x57\xd9\x77\x00\x00\x00\xff\xff\xcc\xaf\x06\x66\x93\x01\x00\x00")

func _000001_create_cache_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__000001_create_cache_tableUpSql,
		"000001_create_cache_table.up.sql",
	)
}

func _000001_create_cache_tableUpSql() (*asset, error) {
	bytes, err := _000001_create_cache_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "000001_create_cache_table.up.sql", size: 403, mode: os.FileMode(0644), modTime: time.Unix(1725002409, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xfc, 0x14, 0x12, 0x28, 0x26, 0x1b, 0x4b, 0x54, 0x52, 0x86, 0xfd, 0x41, 0xee, 0x89, 0x94, 0xad, 0x39, 0xfb, 0x76, 0xb8, 0xf, 0x70, 0xb1, 0x44, 0xdd, 0xb9, 0x7b, 0xd1, 0x8e, 0x1d, 0x47, 0x63}}
	return a, nil
}

var __000002_create_users_databaseDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\xf0\x74\x53\x70\x8d\xf0\x0c\x0e\x09\x56\x28\x2d\x4e\x2d\x2a\xb6\xe6\x02\x04\x00\x00\xff\xff\x2c\x02\x3d\xa7\x1c\x00\x00\x00")

func _000002_create_users_databaseDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__000002_create_users_databaseDownSql,
		"000002_create_users_database.down.sql",
	)
}

func _000002_create_users_databaseDownSql() (*asset, error) {
	bytes, err := _000002_create_users_databaseDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "000002_create_users_database.down.sql", size: 28, mode: os.FileMode(0644), modTime: time.Unix(1725002009, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x1d, 0xac, 0x1, 0xd8, 0xcc, 0xc, 0xd4, 0x80, 0xfb, 0x70, 0x1c, 0x83, 0xc9, 0xdd, 0xff, 0x72, 0x8b, 0xf1, 0x3d, 0x35, 0x4d, 0xe7, 0x69, 0xa2, 0x5e, 0x25, 0xbb, 0xad, 0x22, 0x3d, 0xd2, 0x11}}
	return a, nil
}

var __000002_create_users_databaseUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x90\x31\x4f\xc3\x30\x10\x85\xf7\xfe\x8a\xdb\xda\x4a\x4c\x48\x9d\x98\x4c\xeb\xaa\x16\x69\x5a\x1c\x1b\x5a\x16\xeb\xa8\x4f\x89\xa5\xc6\xa9\x6c\x07\xfe\x3e\x22\x89\x90\x02\x94\x89\xf1\xee\x7b\xef\x9d\xee\x2d\x25\x67\x8a\x83\x62\xf7\x19\x07\xb1\x86\x7c\xa7\x80\x1f\x44\xa1\x0a\x68\x23\x85\x08\xb3\x09\x00\x80\xb3\x50\x70\x29\x58\x06\x7b\x29\xb6\x4c\x1e\xe1\x81\x1f\x6f\x3a\xd4\xb6\xce\x82\xd6\x62\x05\x3a\x17\x8f\x9a\x77\x11\xb9\xce\x32\x58\xf1\x35\xd3\x99\x82\x92\xbc\x09\xe8\x6d\x53\x9b\x4f\xf1\x6c\x3e\x18\x23\x05\x8f\x35\xc1\x13\x93\xcb\x0d\x93\xb3\xdb\xc5\x62\x40\x17\x8c\xf1\xbd\x09\xd6\x54\x18\x2b\x50\xfc\xa0\xfa\x3d\xd5\xe8\xce\x23\xfd\x70\xb4\xc7\xa5\x4b\x55\xfb\xfa\x07\x6f\x9a\xf2\x4c\xd7\x79\xa2\x33\x95\x01\xeb\xeb\x0a\x3c\x25\xf7\x86\x89\x0c\xc6\xe8\x62\x42\x9f\xcc\xf0\xfd\x37\x9e\xaa\x40\x68\xc7\x30\x26\x4c\x6d\x1c\x87\xff\x28\x6b\x7a\x21\x6f\x9d\x2f\xa7\xbd\xe7\x14\x08\x13\x59\x83\x09\x94\xd8\xf2\x42\xb1\xed\x1e\x9e\x85\xda\x74\x23\xbc\xec\xf2\x5f\x0a\x5f\x6a\x29\x79\xae\xcc\x97\x63\x28\xfc\x62\xff\x21\x6b\x32\xbf\x9b\x7c\x04\x00\x00\xff\xff\xfc\x87\x1c\xb6\x36\x02\x00\x00")

func _000002_create_users_databaseUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__000002_create_users_databaseUpSql,
		"000002_create_users_database.up.sql",
	)
}

func _000002_create_users_databaseUpSql() (*asset, error) {
	bytes, err := _000002_create_users_databaseUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "000002_create_users_database.up.sql", size: 566, mode: os.FileMode(0644), modTime: time.Unix(1725002011, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x25, 0xcd, 0x17, 0xc5, 0x92, 0xeb, 0xf4, 0x85, 0x89, 0xd1, 0xdd, 0x91, 0xdf, 0xac, 0xac, 0x9b, 0xd7, 0xfa, 0xaf, 0x7d, 0xfe, 0xd2, 0xc5, 0xf4, 0x2b, 0x4c, 0xfe, 0xe6, 0x84, 0x82, 0xe6, 0x55}}
	return a, nil
}

var __000003_create_assistant_threadsDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x48\x2c\x2e\xce\x2c\x2e\x49\xcc\x2b\x89\x4f\xcd\x4d\x4a\x4d\x49\x49\xc9\xcc\x4b\x2f\xb6\xe6\xc2\xaa\x22\xb1\xa4\x24\x31\x39\x23\x37\x35\xaf\x04\x97\x8a\xdc\xd4\xe2\xe2\xc4\xf4\x54\x5c\xd2\x25\x19\x45\xa9\x89\x29\x38\x64\x61\xc2\xae\x11\x21\xae\x7e\xc1\x9e\xfe\x7e\x0a\x9e\x6e\x0a\xae\x11\x9e\xc1\x21\xc1\x0a\x65\xa9\xc9\x25\xf9\x45\xd6\x5c\x80\x00\x00\x00\xff\xff\x68\x55\x1c\x88\xb9\x00\x00\x00")

func _000003_create_assistant_threadsDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__000003_create_assistant_threadsDownSql,
		"000003_create_assistant_threads.down.sql",
	)
}

func _000003_create_assistant_threadsDownSql() (*asset, error) {
	bytes, err := _000003_create_assistant_threadsDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "000003_create_assistant_threads.down.sql", size: 185, mode: os.FileMode(0644), modTime: time.Unix(1725003095, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x95, 0xfa, 0x47, 0xee, 0x28, 0x1a, 0x2d, 0xde, 0xd1, 0x52, 0x23, 0xab, 0x39, 0x8a, 0x52, 0x4a, 0xdb, 0xe5, 0x4, 0x27, 0x8f, 0x72, 0x38, 0x57, 0xd3, 0x6d, 0x11, 0x1f, 0x5a, 0x9c, 0xaf, 0x7}}
	return a, nil
}

var __000003_create_assistant_threadsUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x97\x4b\x53\xdb\x30\x10\xc7\xef\xfe\x14\x7b\x23\x9e\x81\x03\x30\xe9\x81\x9c\x4c\x10\xe0\x36\x28\xa9\x2c\xd3\xd0\x8b\x47\x44\x3b\xc1\xd3\xf8\x31\x96\xd2\x09\xed\xf4\xbb\x77\xe2\xb7\x4d\x5e\xa5\x4d\x87\x4e\x7a\xf4\x6a\x1f\xd6\xee\xff\x27\xd9\x27\x27\xd0\x4f\x50\x68\x84\xd1\xcd\x3d\x4e\x74\x94\x00\x59\x68\x0c\x95\x1f\x85\x46\x9f\x11\x8b\x13\x20\x63\x4e\xa8\x63\x0f\x29\xd8\xd7\x40\x87\x1c\xc8\xd8\x76\xb8\x03\x5f\x53\xff\x9e\x61\x54\x49\xb8\x78\x9c\xa1\x02\x4b\x29\x5f\x69\x11\xea\x22\x05\xb7\x2e\x07\xa4\x15\x2e\x0a\x27\x05\x1d\x03\x00\xc0\x97\xe0\x10\x66\x5b\x03\x18\x31\xfb\xce\x62\x0f\xf0\x81\x3c\x1c\xa7\x4b\xf3\xb9\x2f\xc1\x75\xed\x2b\x70\xa9\xfd\xd1\x25\x69\x1e\xea\x0e\x06\x70\x45\xae\x2d\x77\xc0\x61\x8a\xa1\x97\x88\x50\x46\x81\xb7\x74\xee\x98\x79\xa0\xc2\xc4\x2b\x62\x19\xb9\x26\x8c\xd0\x3e\x71\x52\xbb\xea\x2c\x3d\x73\xc7\x50\x04\x08\xf7\x16\xeb\xdf\x5a\xac\x73\xd6\xed\x9a\x65\x89\x6c\x5d\xa2\x9a\x24\x7e\xac\xfd\x28\x04\x4e\xc6\x3c\xb3\xaa\x67\xa5\x31\xf0\xe2\x24\x0a\x62\x5d\xb3\x07\x91\xc4\x59\x99\xee\xfc\xac\x9d\x2d\x40\x2d\xa4\xd0\x02\xde\x3b\x43\x7a\x59\x6e\xe2\xe8\xfb\x8f\xa3\x8b\x8b\xd4\x96\xf9\x4d\xd2\xb6\x4a\x4f\x68\xe0\xf6\x1d\x71\xb8\x75\x37\x82\x4f\x36\xbf\x4d\x1f\xe1\xf3\x90\xae\x68\x45\xdf\x65\x8c\x50\xee\x95\x11\x79\x2b\x62\xf9\x07\x72\x19\x66\xaf\x18\xaa\x4d\xaf\xc8\xb8\x35\x54\x5f\x2e\xbc\xb4\xe7\xb5\x37\x1f\xd2\xc6\xac\xf3\x91\x1c\xd7\x36\x67\xf6\x0c\x63\x27\xa9\x78\xfa\x29\x41\x21\xdf\x84\x62\xaa\x97\x5a\xe1\x5d\x6d\xf8\xbf\xc8\xf6\x27\xb2\x6a\x04\x6b\xe4\x56\xe9\xa5\x54\x5d\x7d\x6c\x2d\x0d\x6e\x29\xf9\x0b\xd5\x36\x14\xd9\x51\xe8\x01\x2a\x25\xa6\xf8\xaf\x2a\x3d\xeb\xc4\x46\xff\xa2\x5b\xf5\xb0\x17\x92\xce\xcc\x49\x34\xdb\xc8\x8d\xc6\x45\x1d\x8c\x8c\x14\x4f\x47\x5f\x30\x04\x9b\x72\x72\x43\x58\x2e\xf5\x28\x88\x67\xb8\xe4\x6b\xd5\x2a\x06\x8f\x28\xa5\x1f\x4e\x55\x7e\xb7\x41\xe7\xb4\x7b\xfe\xce\x3c\x14\x9c\xd6\xc9\xba\xd2\xe2\xea\xb3\xfb\xb7\xb9\xa9\x0a\xbc\x9e\xce\x5c\x71\xdb\x4b\x94\xd2\x7c\x1d\x98\x42\x6b\x31\x79\x0a\xf0\x8d\x7c\xb7\xfc\x3d\x36\x5f\x5c\x5e\x79\xb6\xe7\x78\x95\x79\x9e\x54\x1c\x77\x4f\x0b\x90\x95\xff\x0d\x9b\xcc\x1d\x2e\x55\x0d\x21\xed\x09\xac\x46\x8d\xbd\xb1\xd5\xa8\xb2\x1e\xaf\xda\x6f\xc2\xf2\xbc\x26\xd5\x69\x9b\xfe\x36\xec\x86\x5f\x76\x46\x67\x61\xdb\xf1\xdb\x99\xa2\x72\x07\x85\x7b\xeb\x62\x69\x5d\x38\xeb\x6e\x8a\x43\xfb\x02\x6b\xea\xa0\x31\x9b\xbc\xf7\x3b\xa8\xb8\xec\xfd\x86\x6c\x8d\x01\x99\x3d\xe3\x67\x00\x00\x00\xff\xff\x7a\x3e\xcf\x42\xb8\x0e\x00\x00")

func _000003_create_assistant_threadsUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__000003_create_assistant_threadsUpSql,
		"000003_create_assistant_threads.up.sql",
	)
}

func _000003_create_assistant_threadsUpSql() (*asset, error) {
	bytes, err := _000003_create_assistant_threadsUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "000003_create_assistant_threads.up.sql", size: 3768, mode: os.FileMode(0644), modTime: time.Unix(1731662456, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7a, 0xd1, 0x51, 0xb5, 0xdb, 0xe1, 0x19, 0xd1, 0x33, 0xd2, 0xce, 0xe9, 0x16, 0x8e, 0x63, 0xac, 0xe3, 0x2b, 0xfd, 0x6a, 0x64, 0x3, 0xa, 0x1, 0xa, 0xc5, 0x5e, 0x92, 0x9d, 0x9, 0x92, 0xcc}}
	return a, nil
}

var __000004_assistant_embeddings_add_uuidDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\x2c\x2e\xce\x2c\x2e\x49\xcc\x2b\x89\x4f\xcd\x4d\x4a\x4d\x49\x49\xc9\xcc\x4b\x2f\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\xf0\x74\x53\x70\x8d\xf0\x0c\x0e\x09\x56\x28\x2d\xcd\x4c\xb1\xe6\x02\x04\x00\x00\xff\xff\x4d\xb6\xd5\x15\x3e\x00\x00\x00")

func _000004_assistant_embeddings_add_uuidDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__000004_assistant_embeddings_add_uuidDownSql,
		"000004_assistant_embeddings_add_uuid.down.sql",
	)
}

func _000004_assistant_embeddings_add_uuidDownSql() (*asset, error) {
	bytes, err := _000004_assistant_embeddings_add_uuidDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "000004_assistant_embeddings_add_uuid.down.sql", size: 62, mode: os.FileMode(0644), modTime: time.Unix(1725438658, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7, 0x67, 0xdc, 0x76, 0xe8, 0x42, 0x7d, 0xb8, 0xfc, 0xed, 0xca, 0x4c, 0xb9, 0x4e, 0x1d, 0xba, 0xe3, 0x39, 0x66, 0xc0, 0x9a, 0xce, 0x97, 0x13, 0x35, 0xc6, 0x1e, 0x93, 0xff, 0x2a, 0xf8, 0xa5}}
	return a, nil
}

var __000004_assistant_embeddings_add_uuidUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x1c\xca\xb1\x0a\xc2\x30\x10\x06\xe0\xdd\xa7\xf8\x47\x7d\x06\xa7\x68\xae\x10\x38\x53\xb4\x77\xe0\x16\x22\x17\x4a\x86\x46\x30\xcd\xfb\x8b\xce\xdf\xe7\x58\xe8\x01\x71\x17\x26\xe4\xde\x6b\xdf\x73\xdb\x53\xd9\x5e\xc5\xcc\x6a\x5b\x3b\x9c\xf7\xb8\xce\xac\xb7\x88\x30\x21\xce\x02\x7a\x86\x45\x16\x8c\x51\x0d\xaa\xc1\x43\x63\xb8\x2b\xfd\x2d\x2a\x33\x3c\x4d\x4e\x59\xb0\x96\x96\x3e\xb9\xd9\x7b\x4b\xbf\x7c\x3c\x9d\x0f\xdf\x00\x00\x00\xff\xff\xd5\xa2\x18\xce\x70\x00\x00\x00")

func _000004_assistant_embeddings_add_uuidUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__000004_assistant_embeddings_add_uuidUpSql,
		"000004_assistant_embeddings_add_uuid.up.sql",
	)
}

func _000004_assistant_embeddings_add_uuidUpSql() (*asset, error) {
	bytes, err := _000004_assistant_embeddings_add_uuidUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "000004_assistant_embeddings_add_uuid.up.sql", size: 112, mode: os.FileMode(0644), modTime: time.Unix(1725438693, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x4e, 0x5e, 0x5b, 0x50, 0xce, 0x73, 0xa6, 0x78, 0xc2, 0xc3, 0x15, 0x99, 0x16, 0xb1, 0x86, 0xc0, 0xff, 0x22, 0x1b, 0x7c, 0x7f, 0x49, 0x51, 0xab, 0xa4, 0xa1, 0xdb, 0xce, 0x84, 0x9b, 0xfe, 0x2e}}
	return a, nil
}

var __000005_create_new_bookmarks_tablesDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\xf0\xf4\x73\x71\x8d\x50\xf0\x74\x53\x70\x8d\xf0\x0c\x0e\x09\x56\xc8\x4c\xa9\x88\x4f\xca\xcf\xcf\xce\x4d\x2c\xca\x2e\x8e\x2f\x2d\x4e\x2d\x8a\xcf\x4c\xb1\xe6\x22\x46\x6d\x51\x0e\x51\xea\x92\x8b\x52\x13\x4b\x52\x53\xe2\x13\x4b\xac\xb9\x20\xea\x43\x1c\x9d\x7c\x5c\x91\xd4\xc3\xd5\x5a\x03\x02\x00\x00\xff\xff\x1c\xa0\xdd\x93\xa3\x00\x00\x00")

func _000005_create_new_bookmarks_tablesDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__000005_create_new_bookmarks_tablesDownSql,
		"000005_create_new_bookmarks_tables.down.sql",
	)
}

func _000005_create_new_bookmarks_tablesDownSql() (*asset, error) {
	bytes, err := _000005_create_new_bookmarks_tablesDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "000005_create_new_bookmarks_tables.down.sql", size: 163, mode: os.FileMode(0644), modTime: time.Unix(1731990367, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf6, 0x54, 0xe1, 0x48, 0x0, 0xc7, 0xbe, 0xe2, 0xc4, 0xa7, 0x7a, 0x15, 0x16, 0xd4, 0x48, 0x56, 0x32, 0x52, 0x36, 0x51, 0xb9, 0x91, 0xff, 0x63, 0x62, 0x87, 0xd5, 0x2c, 0x8c, 0xb1, 0x15, 0xbc}}
	return a, nil
}

var __000005_create_new_bookmarks_tablesUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\x41\x6f\xe2\x30\x10\x85\xef\xf9\x15\x73\x4c\x24\x2e\xbb\x2b\xf6\xc2\xc9\x84\x41\x78\x37\x38\xd4\x71\x5a\xe8\x25\x32\xd8\x82\x88\x38\xa9\x1c\x53\xb5\xff\xbe\x4a\x6a\x50\x40\x55\xb9\xf4\x98\x97\xf7\x3d\x8f\x66\x5e\xcc\x91\x08\x04\x41\xa6\x09\x02\x9d\x03\x4b\x05\xe0\x9a\x66\x22\x83\x6d\xd3\x1c\x8d\xb4\xc7\x16\xc2\x00\x00\xa0\x54\x90\x21\xa7\x24\x81\x15\xa7\x4b\xc2\x37\xf0\x1f\x37\xa3\xfe\xd7\xe9\x54\x2a\xc8\x73\x3a\x83\x9c\xd1\x87\x1c\xfb\x18\x96\x27\x09\xcc\x70\x4e\xf2\x44\xc0\x5e\xd7\x85\x95\xb5\x6a\x4c\xd1\x99\xc3\xc8\x83\xad\xb6\xc5\x99\xe5\x38\x47\x8e\x2c\xc6\xac\xd7\xdb\xb0\x73\x9e\x8d\xb6\x02\x81\x6b\x71\x49\xfe\x94\x5d\xe9\x2a\x0d\x8f\x84\xc7\x0b\xc2\xc3\xdf\xe3\xb1\xb7\xb7\x27\x63\xa4\x7d\xef\x91\x2b\xa5\xd0\x66\xab\x95\x2a\xeb\x7d\x0b\xaf\x7a\xe7\x1a\x1b\xfe\x1a\xff\xf9\xeb\xb1\x5d\x53\x3b\x5d\xbb\x01\xe6\x95\xef\xb1\x83\x33\xd5\x80\x31\xda\x49\x25\x9d\x84\x7f\x59\xca\xa6\xfe\xf9\x9d\xd5\xba\x6e\x0f\xcd\x55\xb8\xd5\xd2\x69\x55\x48\x07\x82\x2e\x31\x13\x64\xb9\x82\x27\x2a\x16\xfd\x27\x3c\xa7\xec\x8b\x4d\xc6\x39\xe7\xc8\x44\x71\x21\xfc\x82\x5e\xd4\x0f\x64\x05\xd1\x24\x08\x7c\x27\x28\x9b\xe1\xfa\xa6\x13\xa5\x7a\x2b\xfa\x9b\x0d\x46\x4f\xd9\xb0\x2a\xfe\xa2\xa3\xc1\x40\xd1\xe4\x6e\x64\xd7\x9f\x9b\x9c\xee\xf6\xf7\x41\x5b\xdd\x72\xb6\x8a\x26\xc1\x47\x00\x00\x00\xff\xff\x1b\x3c\x35\xe8\xd7\x02\x00\x00")

func _000005_create_new_bookmarks_tablesUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__000005_create_new_bookmarks_tablesUpSql,
		"000005_create_new_bookmarks_tables.up.sql",
	)
}

func _000005_create_new_bookmarks_tablesUpSql() (*asset, error) {
	bytes, err := _000005_create_new_bookmarks_tablesUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "000005_create_new_bookmarks_tables.up.sql", size: 727, mode: os.FileMode(0644), modTime: time.Unix(1731990367, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x21, 0xf0, 0xb7, 0xe0, 0xe4, 0x76, 0x4a, 0xb0, 0x90, 0xd7, 0xbf, 0xe3, 0x69, 0x2a, 0x5, 0x9a, 0x63, 0x4a, 0xd6, 0x26, 0x5e, 0x18, 0x11, 0xc6, 0xce, 0x89, 0xd2, 0x5f, 0x4a, 0xd5, 0xd0, 0x63}}
	return a, nil
}

var __000006_set_embeddings_to_nullableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\x2c\x2e\xce\x2c\x2e\x49\xcc\x2b\x89\x4f\xcd\x4d\x4a\x4d\x49\x49\xc9\xcc\x4b\x2f\x56\x80\xa8\x70\xf6\xf7\x09\xf5\xf5\x53\x80\x48\x80\xc5\x43\x22\x03\x5c\x15\xca\x52\x93\x4b\xf2\x8b\x34\x0c\x4d\x8d\xcd\x34\x75\x70\x2a\x0d\x76\x0d\x51\xf0\xf3\x0f\x51\xf0\x0b\xf5\xf1\xb1\xe6\x02\x04\x00\x00\xff\xff\x54\xfe\xd3\xbb\x73\x00\x00\x00")

func _000006_set_embeddings_to_nullableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__000006_set_embeddings_to_nullableDownSql,
		"000006_set_embeddings_to_nullable.down.sql",
	)
}

func _000006_set_embeddings_to_nullableDownSql() (*asset, error) {
	bytes, err := _000006_set_embeddings_to_nullableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "000006_set_embeddings_to_nullable.down.sql", size: 115, mode: os.FileMode(0644), modTime: time.Unix(1731990367, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7f, 0x7b, 0x48, 0x91, 0x31, 0x65, 0xa1, 0xd9, 0xad, 0x59, 0x3f, 0xd1, 0xb2, 0x16, 0x40, 0x31, 0x18, 0x11, 0x23, 0xb9, 0xc8, 0xf5, 0xf0, 0xbd, 0x6b, 0xf4, 0x0, 0xc4, 0xd9, 0xfc, 0xeb, 0x8a}}
	return a, nil
}

var __000006_set_embeddings_to_nullableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\x2c\x2e\xce\x2c\x2e\x49\xcc\x2b\x89\x4f\xcd\x4d\x4a\x4d\x49\x49\xc9\xcc\x4b\x2f\x56\x80\xa8\x70\xf6\xf7\x09\xf5\xf5\x53\x80\x48\x80\xc5\x43\x22\x03\x5c\x15\xca\x52\x93\x4b\xf2\x8b\x34\x0c\x4d\x8d\xcd\x34\x75\x70\x2a\x75\x09\xf2\x0f\x50\xf0\xf3\x0f\x51\xf0\x0b\xf5\xf1\xb1\xe6\x02\x04\x00\x00\xff\xff\x46\x02\x96\x56\x74\x00\x00\x00")

func _000006_set_embeddings_to_nullableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__000006_set_embeddings_to_nullableUpSql,
		"000006_set_embeddings_to_nullable.up.sql",
	)
}

func _000006_set_embeddings_to_nullableUpSql() (*asset, error) {
	bytes, err := _000006_set_embeddings_to_nullableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "000006_set_embeddings_to_nullable.up.sql", size: 116, mode: os.FileMode(0644), modTime: time.Unix(1731990367, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc7, 0xaf, 0xa6, 0x89, 0x9b, 0xa2, 0xdd, 0xf4, 0xa, 0x52, 0x70, 0x57, 0xba, 0x5d, 0xd5, 0xbb, 0x98, 0x69, 0x47, 0x60, 0xc5, 0xe3, 0x8a, 0x77, 0x64, 0xe3, 0x5d, 0x79, 0xe9, 0x91, 0x80, 0xd4}}
	return a, nil
}

var __000007_new_auth_flowsDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x93\x4f\x6f\x9b\x40\x10\xc5\xef\xf9\x14\x73\xb4\x0f\xb9\x54\xca\xc9\x27\x6a\x48\x8a\xe4\x42\x85\x49\x95\x1b\xda\xec\x4e\x60\x65\x98\x41\xbb\x43\x9a\x7e\xfb\x8a\x3f\x76\x71\xea\x9a\x36\x17\x04\xab\x37\xbf\x79\xf3\x66\xb9\xbd\x85\xd0\x71\x0b\xa2\x9e\x6b\xf4\xa0\xc8\x80\x54\x68\x1d\x28\xef\x59\x5b\x25\x68\x40\x9c\x2d\x4b\x74\xfe\x26\xcc\xd2\x6f\x90\x07\x9f\x77\x11\xc4\xf7\x10\x3d\xc5\xfb\x7c\x0f\xaa\x93\xaa\x70\xf8\xca\x07\x34\x85\xf0\x01\xc9\x6f\xae\x28\x55\x6b\x8b\x03\xfe\xbc\xaa\xe9\x3c\xba\x82\x87\x57\xcd\x44\xa8\xc5\x72\x4f\xbd\x39\xb9\x9d\x1c\x0d\x7e\x5f\x3a\x1a\x05\x13\x31\x8b\x1f\x1e\xa2\x6c\xc6\xec\x5a\xa3\x04\x07\xaa\x2f\xc6\x0f\x53\x28\x81\x34\x81\xe1\x6c\xb3\x50\xf8\x87\x93\x77\x90\xab\x9e\xaf\xa3\x8f\x69\x5c\x22\xbe\x4b\xea\xfe\x31\xd9\xe6\x71\x9a\x5c\x18\xec\x54\x5b\x68\xae\xbb\x86\x56\xeb\x59\x56\x96\x0c\xbe\xa1\x07\xa6\x71\xda\x71\xd5\x23\x33\x4e\xc2\xe8\x69\x06\xb4\xe6\x6d\x8a\x09\x1b\x65\xeb\xcd\x92\xaa\xad\x98\x70\x51\xd5\x3f\x49\x35\xcb\x42\x2f\x4a\xba\x69\xcf\x19\x36\xfc\x8a\xa0\x99\xbc\x38\x65\x49\x3c\xbc\x38\x6e\xce\x66\x08\x76\x79\x94\x4d\x57\x68\x3c\x1f\x1a\x6c\xd3\x64\x9f\x67\x41\x9c\xe4\xf3\xac\x7e\x8f\x55\xe8\x0a\xf5\x61\xf3\x81\x72\xcd\x24\x4a\xcb\x11\x70\xe6\xb3\x0f\xfe\x7f\x3c\xee\x1e\xbf\xce\x77\x39\x45\xf9\xaf\x72\x8f\x22\x96\xca\x53\x58\x5e\xd8\x21\xb0\xb3\xa5\x25\x55\x9f\xec\xac\xa4\x42\x8f\xf0\x03\x1d\x82\x71\xdc\xb6\x68\xc0\x52\xff\x8b\x43\xd7\x42\x63\x4b\xa7\xfa\x7b\xba\xbe\xd0\x37\x08\xc3\x59\xdb\x24\xcd\x8f\xad\x4b\x2b\x55\xf7\x0c\xdf\x83\x6c\xfb\x25\xc8\x56\x9f\xee\xee\xd6\x97\x7c\xff\xbd\x9e\xb9\xac\xf1\xe3\xf5\x82\x35\x96\x4e\x35\xe7\x84\x5f\x01\x00\x00\xff\xff\xcd\x18\xc0\x75\xc9\x04\x00\x00")

func _000007_new_auth_flowsDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__000007_new_auth_flowsDownSql,
		"000007_new_auth_flows.down.sql",
	)
}

func _000007_new_auth_flowsDownSql() (*asset, error) {
	bytes, err := _000007_new_auth_flowsDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "000007_new_auth_flows.down.sql", size: 1225, mode: os.FileMode(0644), modTime: time.Unix(1733886327, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf6, 0xac, 0xc2, 0xf0, 0xb3, 0x17, 0x42, 0xf7, 0xcc, 0x8b, 0x4a, 0x3, 0x35, 0x46, 0x33, 0x76, 0xd2, 0x68, 0xa4, 0xe1, 0xcd, 0xac, 0xe2, 0xe3, 0xa1, 0x8c, 0x60, 0x47, 0x7, 0x1b, 0x25, 0x8a}}
	return a, nil
}

var __000007_new_auth_flowsUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\xdf\x73\xdb\xb8\x11\x7e\xd7\x5f\xb1\x0f\xee\x48\x6a\x44\x4f\x7a\x33\x99\x69\xed\xe9\x4d\x69\x09\x8e\x79\x91\x29\x97\xa2\xea\x5c\xae\x29\x07\x21\x21\x0a\x11\x05\x30\x00\xe8\x58\x77\x73\xfd\xdb\x3b\x00\xf8\x43\x14\x25\xd9\xce\x64\xa6\xa7\x27\x09\xc0\x7e\xc0\x2e\x76\xbf\x6f\x21\xc7\x81\x70\x45\x25\x6c\x68\x2a\xb0\xa2\x9c\x81\x24\x4a\x42\x91\x83\x5a\x11\xc0\x85\x5a\x11\xa6\x68\x6c\xa7\x30\x4b\xcc\x10\x17\xf4\xd7\x72\x71\xbc\x22\x1b\xdc\x73\x1c\xf0\x14\x50\x16\x67\x45\x42\x24\x14\x92\x08\xd8\x60\x86\x53\xb2\x21\x4c\x8d\x60\xe6\x16\x6a\x05\x94\x29\x52\xee\x32\x82\x07\x22\xe8\xb2\x02\x96\x5b\xa9\xc8\x46\x8e\xcc\x0e\xc1\x95\x3b\xee\xf5\xdc\x69\x88\x02\x08\xdd\xab\x29\x32\x78\x12\xdc\xc9\x04\xc6\xb3\xe9\xe2\xd6\x07\xef\x1a\xfc\x59\x08\xe8\xbd\x37\x0f\xe7\x90\xaf\x38\x23\xf0\x2f\x37\x18\xdf\xb8\xc1\xe0\xcd\xeb\xe1\xe5\x01\xeb\x49\x30\xbb\xdb\x31\x2f\x4d\x53\xaa\x56\xc5\xa7\x17\xac\xe7\x3c\xcd\xc8\xf3\xd7\x2b\x92\x69\x97\x37\x87\x2c\x8e\xfa\x23\x89\x52\x94\xa5\x12\x7e\x9a\xcf\xfc\x2b\x98\xa0\x6b\x77\x31\x0d\xa1\xff\xdb\xef\xfd\x8b\x0b\x33\x76\xd9\x9b\xcc\xe0\xec\x0c\xae\xd0\x5b\xcf\xef\x01\x00\x1c\x83\xf7\xe7\x61\xe0\x7a\x7e\x68\x07\x23\xb2\xc1\x34\x8b\xe2\x15\x89\xd7\x60\xec\xf4\x67\x7c\x83\xc6\xef\x60\x60\xe6\xe0\xbf\x7f\x86\xfe\x7f\x7e\x71\x9d\x0f\xd8\xf9\xf5\xb5\xf3\xb7\xf3\xe8\x4f\xaf\x9c\x8f\xaf\xfe\xb1\x33\xe2\x7c\x7c\xf5\xef\xf3\xf2\xf7\xc7\xdf\x7e\x18\xfd\x7e\xd6\x1f\x5e\x1a\x30\xf4\x7e\x8c\xee\x42\x6f\xe6\xc3\xfd\x0d\xf2\x21\x29\xf2\x4c\xdf\x30\x89\xf8\xa7\xcf\x24\x56\x10\xea\x51\x7f\x31\x9d\x5e\xf6\x90\x3f\x81\xb3\xb3\x6f\xf6\x23\xe6\x4c\xe1\x58\x9d\xf4\xc4\x9b\x9b\xa0\xea\xfd\x60\x16\x94\x59\xb2\x37\xa8\xd1\x18\xde\xb4\xc6\xbf\xdd\x19\x5d\x07\xe3\x00\xb9\x21\x2a\x3d\x68\xdf\xab\xf5\x67\xa0\x57\xe9\x0f\x4d\x60\x8e\x02\xcf\x9d\xc2\x5d\xe0\xdd\xba\xc1\xcf\xf0\x0e\xfd\x3c\xaa\x66\x8b\x82\x26\xb0\x58\x78\x13\x58\xf8\xde\x3f\x17\xa8\x39\x76\x95\x0f\x29\x61\x91\xc0\x2c\xe1\x9b\x48\x2f\x1e\x0c\x1b\xdb\xca\xab\xaa\x26\x7e\x78\xf3\xa6\x99\xb5\xd1\xd9\x9d\x2a\xb7\xa8\x57\x74\x0a\xaa\xb3\x00\x4b\xf9\x95\x8b\x24\x5a\x61\xb9\x82\x10\xbd\x0f\xeb\x29\x1c\x2b\xfa\xa0\xc3\x84\xa5\xa4\x52\x61\xa6\xa2\xd2\x91\xee\x12\xb5\x12\x04\x27\x9d\x79\xa9\xb0\x2a\x64\xfb\x84\x1d\xef\xfb\x39\x61\x09\x65\x69\xbf\x31\x7b\xb2\x6c\xea\xa5\xb1\x20\x58\x91\x24\xc2\x0a\x42\xef\x16\xcd\x43\xf7\xf6\x0e\xee\xbd\xf0\xc6\xfc\x84\x0f\x33\xff\x40\xbc\xc7\x8b\x20\x40\x7e\x18\xd5\x16\x4d\xbc\xf3\xe4\x3b\xc0\x69\xb4\xa1\x4d\x22\x37\x49\x20\xc7\x42\x51\x9c\x01\x65\x09\x79\x24\x12\x96\x5c\x40\x4e\xc4\x92\x8b\x0d\x66\x31\xe9\x95\x89\x56\x66\x87\xe7\x4f\xd0\xfb\xbd\x7c\xa3\xc9\x63\xb4\x53\xf6\x30\xf3\xab\x14\x9c\xce\xee\x51\x60\xcb\x64\x38\xd4\xf9\x1d\x20\xe8\x14\xcd\xe5\x8b\xb6\xb0\x39\xd3\x6c\x61\x7e\x57\xd8\x9d\xda\x7b\x19\x76\x9d\xcf\x0d\x7c\x35\x54\xed\x70\xa8\x90\x9b\x58\x2a\x41\xd3\x94\x08\x13\xc3\xe6\xb2\xaa\x33\xcc\x02\x08\xd0\xdd\xd4\x1d\x23\xb8\x5e\xf8\x63\x53\xf3\x76\x55\xd4\x2c\x8e\x62\x9e\x15\x1b\x36\x18\xf6\x02\x14\x2e\x02\x7f\x0e\x61\xe0\xbd\x7d\x8b\x02\x70\xe7\x70\x76\xd6\x6b\x28\xcc\x47\xf7\xe7\x3b\x19\xf1\xf7\xee\x4d\x5b\x82\xb1\x38\x7a\xb9\x61\x90\xcb\xde\xd9\x19\x64\x98\xa5\x05\x4e\x09\xf4\xf3\x2c\x4f\xe5\x97\xac\x7f\xd9\xeb\x19\x69\xa9\x76\x6b\xb4\xa5\x3a\xa2\x0d\x51\xb3\x61\x15\xa4\x3a\xc6\x95\xe9\x11\x03\x73\x98\x2b\x74\x3d\x0b\x10\x2c\xee\x26\x26\x22\x25\x84\x99\xba\x9e\x05\x80\xdc\xf1\x0d\x04\xb3\xfb\x92\x19\xd1\x78\x11\x3e\x2b\x58\xf6\x0a\xac\xfc\x8f\x39\x63\x24\xd6\x7a\x2f\x2f\xe0\xd6\x74\x07\x12\xd4\x8a\x8a\xc4\xd1\xb9\xbe\xdd\xef\x36\x72\xc1\x1f\x68\xa2\x4f\xe1\x38\x80\x18\xfe\x94\x95\xad\x85\x04\xc5\x21\xa3\x6c\x0d\x9b\x22\x53\x34\xcf\x48\xb9\x43\x6d\xa1\x17\xa8\x15\xa1\x02\x70\x1c\xf3\x82\x29\x0d\x31\x57\x5c\x10\x09\x8c\xc4\x44\x4a\x2c\xb6\xa0\xf8\x9a\x30\x69\x7a\x8e\xca\xd2\x91\x39\x89\x75\x5f\x02\x09\x56\xb8\x77\x82\xcc\xf5\x61\x4d\x28\x23\x6e\xbe\xc6\x8d\x77\x30\xe8\x95\xfc\x6e\xf8\x7b\x87\xdd\x4f\x71\x77\x45\xdc\x15\x1d\x36\x8c\x11\xa0\x6b\x14\x20\x7f\x8c\x4a\x09\x19\x68\x93\xa1\xbe\xa4\x09\x9a\xa2\x10\xc1\xd8\x9d\x8f\xdd\x09\xb2\x18\x95\x2b\x2d\xfe\xae\xb0\x46\xd0\x7c\xea\x8b\xa9\x2d\x4c\x01\x0d\xc8\x79\x7a\x3e\x82\xbe\x6d\x75\xfa\xfa\x9b\x69\x92\xfa\xc3\x16\x7c\x54\x9d\xf5\x20\x4d\x8f\x0c\xfc\x42\x12\xd1\x97\xe0\x4d\x80\x32\xd3\x4f\x56\xc6\x7d\x59\xb6\x7c\x6d\xc8\xae\x32\x59\x97\x70\xac\xaf\x2c\x32\xf7\x65\xd5\x06\x0e\x7f\x6a\x97\xac\x85\xbd\x61\x53\xf5\xee\x9d\x07\x31\xce\x32\x9b\xd2\x82\x2c\x05\x91\xab\xa7\x11\x75\x7b\x5c\x63\x94\x56\x94\xa5\xad\x13\x19\x44\xf3\x2d\x22\x8f\x39\x15\x44\xb6\x84\x20\xfc\xd0\xbe\x97\x48\x67\x96\xd5\xa8\xc3\x9b\x3a\x0e\x5c\x67\xe4\x91\x7e\xca\x08\x48\xc5\x85\xa6\x03\x43\xfe\x9d\x1c\xa5\xcc\xa8\x81\x4e\xba\xde\x31\x59\x0b\x3f\x3c\x4b\xc9\x8e\xc9\xd8\x0b\xcc\x77\x9b\xb4\x2f\x9d\xaa\x28\x99\x7e\x50\x79\x31\xea\x64\xd2\xb0\xa7\xe9\xa2\x2c\xb9\x63\x82\xc0\x9b\xba\xa3\x89\x2e\x81\x13\x75\x38\xa8\x80\x2f\x9f\x87\x5a\x1f\x28\xe3\x7c\x5d\xe4\x4f\xa1\x9f\xf0\xe4\x99\x1b\xee\x24\xcd\xf6\xa9\xdd\xf6\x13\xac\x12\xbe\x4e\xe2\xb5\x05\xf0\xb4\x76\x74\xb6\xd9\xd3\x91\x13\x07\x3a\xa6\x2e\xa7\x20\x0f\x2b\xcd\x89\x4d\xbe\x93\xfe\xe8\xe2\x7f\x47\xb6\xa5\xe8\xe8\x27\xe9\x45\x2d\x28\xb9\xe0\xfa\x81\xa6\xab\x28\x6e\x68\xc3\xb0\x95\x7b\xe7\x19\xdd\x28\xf2\x9c\x0b\x25\x1b\xb5\x31\x0d\x2c\x81\x35\xd9\x4a\xdd\x92\xd9\xf7\xee\x57\xaa\x56\x90\xd0\xe5\x92\x08\xc2\x14\xc8\x98\xe7\xc4\x48\x97\xb7\xc9\x33\xb3\xa9\xd4\x16\x20\xb8\xda\x79\x4d\x6b\x24\xaa\xb6\xa0\x04\x8e\xd7\x94\xa5\x4f\x4a\x0e\xce\x69\x64\x36\xfe\xbf\x8a\x4c\xe7\x75\x71\x4c\x61\xb4\x04\x38\x09\x59\x52\x46\x12\x6b\xa5\xa9\x4c\x47\x77\x4d\xb6\x06\x6a\x4d\xb6\x51\x2e\xc8\x92\x3e\xd6\x80\x7f\xed\xc2\x69\x52\xe4\xc2\x04\x90\x26\xba\x49\xa8\xff\x3b\xd0\x71\xe7\x85\x02\xf2\x98\x73\xa9\xb9\x79\x59\x64\x59\x0b\xdd\x3c\x52\x4e\x1e\x56\xdf\x32\x89\x0b\x41\xb2\xad\xa1\x5c\x92\x40\xcc\xf5\xb5\x29\x73\x4e\xd0\x08\x06\xce\xde\xaa\x51\x8c\x5f\x3e\x1e\xf4\xb9\x84\x73\x85\xc0\x5b\xe0\x4b\x9d\x1f\x1b\x2a\xa5\xe9\x0b\x52\x81\x99\x22\x89\xcd\x2f\x2a\xeb\x43\x1e\x91\x8d\x03\xe2\x96\x6b\x97\xb1\x71\xcf\x5a\x35\xe4\x9f\x61\xa9\x74\x19\xed\xf3\xf7\xa8\x23\x68\x3a\xd5\x6c\x2e\x16\x12\xa7\xe4\x0f\x27\x1d\x26\x41\xf5\xc5\x99\x7c\x29\x75\xa3\xcc\xda\x91\x49\xa2\x61\xc7\x2c\x5e\x1b\x8b\x92\x4b\xab\xff\x01\xda\xac\x58\xbe\xf9\x77\x46\x7f\xdc\xf1\xfb\x59\xf2\xd3\x2a\xc1\x2a\x6d\x2b\x0e\xab\xc6\x07\x4d\x4a\x3f\xad\x04\x6d\x44\xc3\x24\x1d\xbc\x67\xcb\x4a\x1b\x6c\x4f\x58\x6a\xb8\xae\x88\x7c\xa3\x7c\xec\x9d\xbd\x2b\x1d\xd5\xdc\x31\xb1\x38\x06\x70\x42\x28\xaa\xd5\xdf\x49\x1a\x6c\x77\x17\x90\x07\x6e\xe9\xe4\x62\x97\xae\xa5\xe1\x04\xc8\x78\xaa\x09\x46\xf3\xb5\x6d\x18\x29\x7b\xc0\x19\x4d\x6c\xed\x35\x15\x25\xc8\x03\x5f\x93\x04\x7e\xba\x0f\xab\xb7\x45\xc1\x14\xcd\xca\xa7\x08\xc3\xaa\x10\x38\xdb\xad\xdb\x5d\x75\x79\xc0\x82\xf2\xc2\xa2\x94\xd4\x26\x08\x96\x9a\x37\x34\x65\xe2\x22\xa1\x0a\xf2\x42\xe4\x5c\x12\xf9\xa4\x4c\x94\x67\x89\xca\x73\x58\xb1\xf8\xac\x68\x47\x2d\xba\x3d\xa8\x66\x6d\x46\xbf\x14\xc4\x38\x52\xb1\x2d\x11\x2f\x16\x8f\xd1\x09\x72\xdb\xe7\x4e\xc7\x81\xfb\x15\x61\x65\x80\xbf\xf2\x22\x4b\xaa\x80\x65\x25\xd5\x91\xb2\x75\xb7\x8e\x7d\x23\xd3\xd8\x90\xd6\x6a\xf0\x97\xd7\xaf\x87\x07\xba\x70\xc7\x81\xc0\x2e\xb4\x7d\x7f\x7d\x23\x03\x9b\x0b\x23\x9b\x1a\x5a\xb8\x63\xce\x62\x22\xd8\x08\x88\x8a\xcf\x87\x07\xd8\xac\x75\x13\xd5\xff\x1d\x0d\x9d\x7d\x56\xf4\x20\x9b\xd9\xbe\x6e\x67\xeb\x2e\xa7\xfd\xb8\x13\x8c\xe7\xb3\x57\x3b\x33\xf6\x49\xa2\x3d\xbb\x4b\x15\xcf\x23\x9f\x3d\xf4\x16\x9f\xed\x61\x37\xac\xf6\xbf\x00\x00\x00\xff\xff\xc9\x43\x66\x4b\x85\x18\x00\x00")

func _000007_new_auth_flowsUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__000007_new_auth_flowsUpSql,
		"000007_new_auth_flows.up.sql",
	)
}

func _000007_new_auth_flowsUpSql() (*asset, error) {
	bytes, err := _000007_new_auth_flowsUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "000007_new_auth_flows.up.sql", size: 6277, mode: os.FileMode(0644), modTime: time.Unix(1736570339, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x37, 0xa6, 0x6b, 0x7, 0x8c, 0x5b, 0xc5, 0x5, 0xc8, 0xc1, 0xf9, 0xa8, 0xad, 0x4a, 0x5b, 0x62, 0x9b, 0x13, 0x73, 0xa3, 0x7f, 0x36, 0x94, 0x20, 0xc2, 0x5, 0x9, 0xfa, 0x77, 0x58, 0x9a, 0x2a}}
	return a, nil
}

var __000008_comprehensive_bookmarksDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\xd0\xcf\x6a\x84\x30\x10\xc7\xf1\x7b\x9e\x62\x5e\x40\x0a\x85\x9e\x72\x6a\xd1\x82\x50\xda\xb2\x7a\xf0\x16\x46\x33\x9b\x0d\x68\x0c\xc9\x2c\xb8\x6f\xbf\xec\x1f\xc1\x05\x71\x65\xbd\x7f\xf3\xc9\x8f\x49\x12\x48\x43\xef\xa1\xe9\x1d\x93\x63\xd8\xf7\xad\xa6\x00\x1d\x7a\x6f\x9d\x01\xc6\xba\x25\x40\xa7\xc1\x72\x04\x0e\xd6\x18\x0a\x22\xdd\xfd\xfd\x43\xf9\xf9\xf5\x93\x41\xfe\x0d\x59\x95\x17\x65\x31\x0a\xea\x26\x44\x75\x27\xa4\x10\xf3\x7f\xc4\x0d\xf8\x0c\xca\x68\xe2\x96\xd9\x97\xf7\x0b\x9b\xaf\xfc\x8b\xec\x2c\x37\x95\xac\xd3\x34\x50\x7c\x7b\x10\xf3\xdf\x34\xab\x26\xa2\xd5\x83\x1a\xd5\xba\x7b\xff\x50\x91\x30\x34\x07\xf9\xbc\xee\x88\x51\x23\xe3\x8a\xb4\x09\x84\x4c\x5a\x21\xaf\x88\xf9\xe4\x69\x45\x76\x8c\x14\x94\xd5\x72\xf1\x50\x52\x9c\x03\x00\x00\xff\xff\x56\xbb\xe0\x23\x8a\x02\x00\x00")

func _000008_comprehensive_bookmarksDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__000008_comprehensive_bookmarksDownSql,
		"000008_comprehensive_bookmarks.down.sql",
	)
}

func _000008_comprehensive_bookmarksDownSql() (*asset, error) {
	bytes, err := _000008_comprehensive_bookmarksDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "000008_comprehensive_bookmarks.down.sql", size: 650, mode: os.FileMode(0644), modTime: time.Unix(1736065371, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x1b, 0x9e, 0xec, 0x19, 0x50, 0x75, 0x3, 0xd8, 0xde, 0x3b, 0x65, 0xeb, 0xef, 0xc0, 0x15, 0xb5, 0x98, 0x6f, 0xe5, 0x86, 0x63, 0x94, 0x8f, 0x9b, 0x10, 0xe3, 0x8e, 0x1f, 0x44, 0xdc, 0xf, 0x6c}}
	return a, nil
}

var __000008_comprehensive_bookmarksUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x96\x51\x73\xa3\x36\x17\x86\xef\xfd\x2b\xce\x5d\xf0\x0c\x4e\xf2\xed\x4e\x6e\xbe\x9d\x5e\x10\x5b\x4e\x68\x1d\x48\x31\x74\xb3\xbd\x61\x64\x24\x13\x35\x80\x18\x49\xde\xdd\xb4\xd3\xff\xde\x91\x40\xc0\x6e\x62\xe2\xec\x78\x3a\x99\x5e\x4a\xe7\xbc\x87\xa3\xa3\x87\x17\x66\x33\x98\xf3\x4a\xd1\x4a\x81\xc2\x9b\x82\x82\x53\x62\x56\xc1\x86\xf3\x87\x12\x8b\x07\xd9\xec\x4e\x27\xf3\x08\x79\x31\x82\xd8\xbb\x5c\x21\xc8\x5a\x85\x33\x01\x00\x60\x04\x76\x3b\x46\xe0\x36\xf2\x6f\xbc\xe8\x13\xfc\x82\x3e\xc1\x02\x2d\xbd\x64\x15\x43\x4e\xab\x54\xe0\x8a\xf0\x32\xd5\x39\xce\xd4\x35\x92\x9d\xa4\x22\xb5\xba\x20\x8c\x21\x48\x56\x2b\x88\xd0\x12\x45\x28\x98\xa3\xb5\x49\x90\x8e\x0e\xb7\x0a\xf5\x58\x53\xf8\xcd\x8b\xe6\xd7\x5e\xe4\x5c\x9c\x4f\x3b\x95\x0b\xb3\x59\x13\xe5\xdb\xbe\x31\xdb\xbf\x0b\x42\x4a\x17\x2a\xfa\x45\x16\x54\x29\x2a\x5c\xa8\xc9\xd6\x05\x5a\xef\x36\x2e\xb0\x12\xe7\xd4\x85\x9a\x93\x0c\x4b\xe5\xc2\x67\x46\x28\x77\x81\xaa\xec\x74\xda\x3c\x95\xa9\x82\x42\x8c\xee\xe2\xfe\x79\x26\x40\xa8\xcc\x04\xab\x15\xe3\x95\x09\xb7\xc7\x12\x45\xb3\xd2\x3d\x25\xd1\x4a\xb7\xa4\xee\x29\xf4\xdd\x98\x4e\x00\x0b\xc5\xb2\x82\x36\x4f\x6a\xea\x71\x33\xf6\x4e\xdc\xae\x5b\x7d\x12\xad\x4c\x96\x7c\x9f\x3e\xd0\xc7\x3e\x6b\xfd\x1e\xf4\x7a\xcb\x05\x48\xc5\x05\xab\x72\x3b\x81\x26\x7d\x57\x96\x58\x0c\xf2\x3d\x5f\x5f\x08\x15\x58\x51\x62\xa3\x26\xd3\xce\xad\xcb\xd4\xdd\x12\xfe\xa5\xfa\xa6\xde\xbd\x2a\x07\xe7\x33\xab\x61\xb8\xa4\x0a\x13\xac\x30\xfc\xbc\x0e\x83\xcb\x0e\x81\x93\xbf\xfe\x3e\x69\xc6\xc3\x64\xba\xc5\x9f\xb9\x60\x8a\xc2\x65\x18\xae\x90\x17\x74\x59\x5b\x5c\x48\xda\xa4\x65\x82\xea\x06\x53\xac\x20\xf6\x6f\xd0\x3a\xf6\x6e\x6e\xe1\xa3\x1f\x5f\x9b\x25\xfc\x1e\x06\xa8\x67\xc6\xea\xe7\x49\x14\xa1\x20\x4e\x3b\x45\x7b\x23\x35\x39\x42\xad\xc9\xf4\xc3\x64\x32\x9b\x81\x5f\x11\xfa\x95\x4a\xfb\x32\xf8\xc1\x02\xdd\x01\x23\x5f\xd3\x76\x0c\xa9\xe5\x3a\x0c\xec\x64\x9c\x76\x6b\xfa\x61\xbf\xca\xd0\x3b\x90\xe8\xf5\x58\xbe\xc6\x6c\xf8\x04\x51\x8c\x65\xb7\x28\x0d\x04\xcd\xce\x98\x66\x70\x05\x03\x5d\xbf\x3b\xa6\xed\x30\xe8\x95\x90\xac\xfd\xe0\x0a\x72\x56\x39\x5d\xf4\x0f\xc9\xab\x4d\x5a\x63\x75\x9f\xf2\x5a\xb6\x03\xbe\xbc\x79\x77\x01\x4c\x4f\x19\x78\xcf\x9e\x81\x4d\xd5\xf2\xff\x67\x67\x84\x67\xf2\xb4\xc6\x02\x13\x4a\x36\xa7\x19\x2f\xf5\xce\xae\xa4\x95\xc2\xfa\x5d\x3c\x33\x5a\x56\xe5\x67\x4d\xaf\xa9\x59\xef\xef\x75\x53\xbe\xbb\x48\x25\xc5\x22\xbb\x1f\xb4\x3b\x69\xda\xd5\x41\x70\x18\x71\x1b\x1b\x70\x87\x2f\xbd\x6b\x5f\x1f\xd7\x8a\xdc\x8e\xff\xe9\xc4\x00\xe6\x3c\xd0\xc7\x74\xcb\x68\x41\x7e\x3a\x61\xe4\x44\x9f\x70\x11\x85\xb7\x10\x47\xfe\xd5\x15\x8a\xc0\x5f\x02\xba\xf3\xd7\xf1\xba\x85\xb4\xbf\xde\x9e\xd9\xbe\xa7\x6e\xe0\x56\xbe\x57\x64\xb8\xbf\x44\xcb\x30\x42\x90\xdc\x2e\xb4\x66\x70\x34\x1d\x5c\x86\x11\x20\x6f\x7e\x0d\x51\xf8\xd1\x6c\xa0\x3b\x34\x4f\x62\x04\xcb\x24\x98\xc7\x7e\x18\xd8\xe2\x7d\xd1\x34\xe3\xc5\xae\xac\x9c\xf6\x9e\x62\x9c\xb7\x5f\x86\x67\x3f\x0c\xa9\xd2\xf1\x1f\xfe\x3a\x54\xb8\xdc\xe3\xf5\x3f\xf8\xf1\xd8\x49\x9c\xeb\x51\xed\x2a\x05\x7e\x10\x23\x3d\x3f\xdb\xc3\xf9\x5b\x35\x9d\xa6\x56\x12\xf8\xbf\x26\xc8\xd1\x23\x71\xed\xc9\xa7\xc6\x8f\xf6\xdb\x09\xce\x65\x6a\x66\xd8\xdf\xbb\xd9\x34\x55\x46\x8d\x48\x2b\x9f\x7a\x58\x23\xee\x8d\xec\x40\x8e\x9b\x6a\xcf\xc1\x6c\x42\x2f\x11\xfd\x9d\x7c\x14\x6b\x93\x7c\x24\xb6\xfb\xdf\xa1\x5c\x82\xa0\x85\x31\x16\x79\xcf\xea\xfd\xa8\xa7\x25\xae\x6b\xfd\xf5\x75\x86\x5f\xd3\x8e\xd1\x01\x9a\xd6\x4a\x19\x99\xea\xf6\x17\x68\x85\x62\x04\x73\x6f\x3d\xf7\x16\xa8\xfd\xd3\xc1\xf9\x88\xb2\xb9\x8b\x11\xf9\x5b\x05\x79\xf8\xfe\x3b\xfd\x84\xdc\xf6\xbc\x0d\xd3\xaf\x00\xab\x1d\xf9\x08\x60\x36\xe5\x20\xd0\x9e\x96\x7b\x19\x38\x2b\x3a\x12\x78\x4b\x5e\x10\x2a\xa4\xf9\x9d\xe3\x22\xc7\x15\xfb\xd3\xb0\xf7\x3c\x77\xdb\x36\xfb\x5f\xfc\x07\xff\xc6\x97\xff\x77\xfe\xc4\x98\x6b\x2c\xc6\xb1\xb7\x4d\x3b\x5d\xc9\xb7\x47\xeb\xb8\xb7\xb6\x07\x78\xce\x24\xed\xd9\x5e\xed\x93\x5d\xcd\x67\x49\x6e\xa3\x2f\x41\xfc\xb4\xc8\x38\xbf\x6d\xfe\x91\x3d\xb3\xa9\x7a\x80\x6b\xda\x76\x8f\x69\x9c\x4d\xcd\x03\xf1\xfb\xcf\xd8\x67\x77\xea\xd7\x38\xe8\x77\xe3\x1f\x47\xef\x50\x1f\xdd\x5f\xf4\x20\x14\x8f\xe8\xa6\xff\x04\x00\x00\xff\xff\x72\x53\x11\x52\xd5\x10\x00\x00")

func _000008_comprehensive_bookmarksUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__000008_comprehensive_bookmarksUpSql,
		"000008_comprehensive_bookmarks.up.sql",
	)
}

func _000008_comprehensive_bookmarksUpSql() (*asset, error) {
	bytes, err := _000008_comprehensive_bookmarksUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "000008_comprehensive_bookmarks.up.sql", size: 4309, mode: os.FileMode(0644), modTime: time.Unix(1736065371, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x28, 0x76, 0xf9, 0xff, 0xf9, 0x71, 0xec, 0xa6, 0x77, 0xb6, 0x23, 0x92, 0xc, 0x0, 0x54, 0x93, 0x8, 0x4e, 0xf4, 0xb7, 0xc7, 0xa9, 0x8c, 0xc2, 0x4, 0x44, 0xc6, 0xaf, 0xb9, 0xe9, 0x1d, 0xb6}}
	return a, nil
}

var __000009_migrate_bookmarks_dataDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func _000009_migrate_bookmarks_dataDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__000009_migrate_bookmarks_dataDownSql,
		"000009_migrate_bookmarks_data.down.sql",
	)
}

func _000009_migrate_bookmarks_dataDownSql() (*asset, error) {
	bytes, err := _000009_migrate_bookmarks_dataDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "000009_migrate_bookmarks_data.down.sql", size: 0, mode: os.FileMode(0644), modTime: time.Unix(1736320654, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe3, 0xb0, 0xc4, 0x42, 0x98, 0xfc, 0x1c, 0x14, 0x9a, 0xfb, 0xf4, 0xc8, 0x99, 0x6f, 0xb9, 0x24, 0x27, 0xae, 0x41, 0xe4, 0x64, 0x9b, 0x93, 0x4c, 0xa4, 0x95, 0x99, 0x1b, 0x78, 0x52, 0xb8, 0x55}}
	return a, nil
}

var __000009_migrate_bookmarks_dataUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x90\x5f\x6b\xb3\x30\x18\xc5\xef\xfd\x14\xcf\xc5\x0b\xd1\xb7\x5a\xb7\xcb\xb9\x0b\x29\x92\x8d\x82\xab\x45\x1d\x0c\xfa\x47\xb2\x9a\xb5\xd2\x46\x25\x79\xc4\xf6\xdb\x8f\x26\xd9\x18\xac\xb7\xbb\x3b\xe7\xc9\xe1\xf0\xcb\x99\x2f\x0a\x9a\x97\x30\x5f\x94\x19\xec\xba\x16\x79\x8b\xe0\x3a\x00\x00\x83\xe2\xb2\x6a\x6a\x5f\x1b\xbc\xf4\xdc\xaa\x06\x4f\x56\x0e\xf2\x64\x44\xdd\x09\xd6\xb4\x46\xab\x41\x08\x26\x2f\xc6\xd8\x46\x63\x0e\x28\x6c\x5e\x70\x64\x35\x43\x66\x43\x92\x33\xe4\x75\xc5\x6c\x6e\xe8\x6b\xeb\x1d\xcf\x29\x68\x4a\x93\x12\x7e\x13\x91\xf7\xae\x3b\x0a\x26\x8f\x04\x98\xfa\xc1\x97\x64\xb3\x94\x16\x09\x75\x0d\x28\x10\xe2\xe9\xc0\x0d\xec\x20\x00\x7a\x46\xc9\x76\x68\x7f\x00\x1f\xb2\x13\xf0\x9a\xa7\x30\xa8\xa6\xdd\x83\xe4\x7b\x7e\xd6\xd1\x9c\x3e\xd3\xb7\x65\x95\xd3\x65\x3a\x4b\xa8\x19\xe8\xc6\xfd\x5a\x0d\x64\x7b\x40\xec\x55\x1c\x85\xa1\x1b\x47\xe3\x38\xae\xa7\x5e\xec\xae\xb6\xe1\x66\xe2\x4d\xff\x13\x1f\xc8\xfa\x9e\x78\xfe\x77\x07\x89\x56\x77\xc1\xc3\x66\xf2\xef\xfa\x44\xf4\x59\x23\xff\xd9\xaa\x4f\x79\xf6\x02\x5f\xf3\xa9\x47\xe7\x33\x00\x00\xff\xff\x3e\xca\xbf\x8d\x04\x02\x00\x00")

func _000009_migrate_bookmarks_dataUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__000009_migrate_bookmarks_dataUpSql,
		"000009_migrate_bookmarks_data.up.sql",
	)
}

func _000009_migrate_bookmarks_dataUpSql() (*asset, error) {
	bytes, err := _000009_migrate_bookmarks_dataUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "000009_migrate_bookmarks_data.up.sql", size: 516, mode: os.FileMode(0644), modTime: time.Unix(1736065371, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x76, 0xda, 0x9a, 0x43, 0xe6, 0x27, 0x49, 0x69, 0x2b, 0x55, 0xb5, 0x60, 0xe9, 0x3b, 0xf2, 0x50, 0xa5, 0xdf, 0x8f, 0x69, 0x20, 0xc3, 0xb3, 0x94, 0xe3, 0x51, 0x79, 0xfa, 0x84, 0x3c, 0x7e, 0x86}}
	return a, nil
}

var __000010_share_contentDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x09\xf2\x74\x77\x77\x0d\x52\xf0\x74\x53\x70\x8d\xf0\x0c\x0e\x09\x56\x28\x2d\x48\x49\x2c\x49\x8d\x4f\xce\xcf\x2b\x49\xcd\x2b\x89\x2f\xce\x48\x2c\x4a\x8d\x87\x08\xa6\xc4\x27\x96\x28\xf8\xfb\x29\xa0\xc8\x59\x73\x81\x0d\xf2\xf4\x73\x71\x8d\x40\x32\x06\x55\x3f\x8c\x97\x99\x12\x9f\x99\x52\x41\x94\x96\xd2\xe2\xd4\x22\x54\xf5\x21\x8e\x4e\x3e\xae\xb8\xd4\x5b\x73\x01\x02\x00\x00\xff\xff\x5f\x7d\xd3\x03\xd0\x00\x00\x00")

func _000010_share_contentDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__000010_share_contentDownSql,
		"000010_share_content.down.sql",
	)
}

func _000010_share_contentDownSql() (*asset, error) {
	bytes, err := _000010_share_contentDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "000010_share_content.down.sql", size: 208, mode: os.FileMode(0644), modTime: time.Unix(1736320603, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd1, 0xaf, 0xea, 0x56, 0xd3, 0x6, 0x4, 0xb, 0x32, 0x12, 0x25, 0xe1, 0xf5, 0xce, 0x87, 0x7e, 0x9, 0xbe, 0x9c, 0x76, 0xf3, 0x6f, 0xea, 0x6b, 0x6e, 0xe3, 0x46, 0x76, 0x28, 0x64, 0x3c, 0x0}}
	return a, nil
}

var __000010_share_contentUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x91\x4d\x8e\xa3\x30\x14\x84\xf7\x9c\xe2\x2d\x41\x9a\x1b\x64\xe5\x98\x47\x62\x0d\xb1\x91\x79\x28\xc9\x6c\x2c\x14\x5b\x33\x48\x13\x12\xf1\x23\xe5\xf8\x2d\x13\x13\xba\xa3\x56\x77\xd4\x4b\xa8\xaa\xcf\xe5\x32\xd7\xc8\x08\x81\xd8\x3a\x47\x10\x19\x48\x45\x80\x07\x51\x52\x09\xa7\x4b\x3b\xb8\x76\x30\xfd\xbf\xba\x73\x10\x47\x00\x00\x8d\x85\x71\x6c\x2c\x14\x5a\xec\x98\x3e\xc2\x6f\x3c\x42\x8a\x19\xab\x72\x82\xbf\xae\x35\x5d\xdd\xda\xcb\xd9\x78\x4f\x9c\xfc\x9a\x22\x63\xef\x3a\x33\xe7\x3c\x5e\x56\x79\x0e\x1a\x33\xd4\x28\x39\x96\x93\xa1\x8f\xbd\x1c\x12\xf3\xc1\x73\xe8\x9d\x37\x48\x71\x63\x13\x50\x12\x52\xcc\x91\x10\x38\x2b\x39\x4b\xf1\x9e\x76\xb7\x6b\xd3\xb9\xde\xd4\x03\x90\xd8\x61\x49\x6c\x57\xc0\x5e\xd0\x76\xfa\x84\x3f\x4a\xe2\xa3\xb2\xaf\x12\xce\xec\x5c\x3d\x38\xfb\x52\x8a\x57\x5a\xa3\x24\xf3\x30\x86\x8b\x5e\xed\xcf\x11\x51\xb2\x8a\xa2\xf0\x18\x42\xa6\x78\xf8\xea\x31\x4c\xd8\xd4\x34\xf6\xe6\x67\xf8\x20\xc6\x41\x4c\x56\xaf\xf3\x96\xc5\x3f\x47\x2e\xba\xaf\x99\x6a\x55\x00\x69\xb1\xd9\xa0\xf6\xd8\x80\xbc\xdf\xdf\x3c\x35\x5d\x46\x79\xa6\x3e\xfa\xcd\xa8\x6f\x00\xd3\xc8\x6b\xcc\x94\x46\xa8\x8a\xd4\x27\x9f\x91\x93\x25\x53\x1a\x90\xf1\x2d\x68\xb5\x9f\x7e\xe0\x01\x79\x45\x08\x59\x25\x39\x09\x25\xe7\x83\x16\xb4\x39\x5d\xfe\x8f\xe7\x36\x4e\x56\xd1\x5b\x00\x00\x00\xff\xff\xdf\x96\x6d\x4a\x11\x03\x00\x00")

func _000010_share_contentUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__000010_share_contentUpSql,
		"000010_share_content.up.sql",
	)
}

func _000010_share_contentUpSql() (*asset, error) {
	bytes, err := _000010_share_contentUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "000010_share_content.up.sql", size: 785, mode: os.FileMode(0644), modTime: time.Unix(1736265922, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7f, 0x20, 0xa7, 0x87, 0xed, 0xc6, 0x76, 0xe7, 0x46, 0x5, 0xd2, 0x4c, 0x7e, 0x2e, 0x5, 0x13, 0x6c, 0xf4, 0x1f, 0xe5, 0x88, 0xb7, 0xac, 0xa5, 0xcd, 0x2b, 0xec, 0x65, 0xd, 0x46, 0xc, 0x41}}
	return a, nil
}

var __000011_create_s3_resources_mapping_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x09\xf2\x74\x77\x77\x0d\x52\xf0\x74\x53\x70\x8d\xf0\x0c\x0e\x09\x56\x28\x2d\x48\x49\x2c\x49\x8d\x4f\xcb\xcc\x49\x2d\x8e\x87\x70\x52\xe2\x13\x4b\x14\xfc\xfd\x14\xc0\x62\xd6\x5c\x60\x8d\x9e\x7e\x2e\xae\x11\x48\xda\x32\x53\x2a\xe2\xf3\x8b\x32\xd3\x33\xf3\x12\x73\xe2\x4b\x8b\x72\xf0\x28\x2b\x36\x26\xa0\x00\x64\x4f\x7c\x46\x62\x71\x06\x21\x35\x25\x95\x05\xa9\x78\xd4\xe4\xa6\x96\x24\xa6\x24\x96\x24\x42\x95\x84\x38\x3a\xf9\xb8\x22\x29\x81\x7a\x07\x10\x00\x00\xff\xff\x5e\x8a\x3b\xdd\x08\x01\x00\x00")

func _000011_create_s3_resources_mapping_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__000011_create_s3_resources_mapping_tableDownSql,
		"000011_create_s3_resources_mapping_table.down.sql",
	)
}

func _000011_create_s3_resources_mapping_tableDownSql() (*asset, error) {
	bytes, err := _000011_create_s3_resources_mapping_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "000011_create_s3_resources_mapping_table.down.sql", size: 264, mode: os.FileMode(0644), modTime: time.Unix(1736324065, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x4c, 0xd1, 0x98, 0x65, 0xce, 0xec, 0x52, 0x71, 0xfd, 0x8b, 0xae, 0x33, 0xc1, 0xc8, 0x9f, 0x77, 0xb7, 0x3e, 0x6, 0x14, 0x8c, 0x3c, 0x5b, 0x2f, 0x40, 0x30, 0xad, 0x94, 0x3d, 0x2, 0x41, 0x75}}
	return a, nil
}

var __000011_create_s3_resources_mapping_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\x4f\x73\xfa\x36\x10\xbd\xfb\x53\xbc\x1b\x66\x06\x2e\xcd\xe4\x94\x93\x31\x82\xb8\x25\x32\x95\xe5\x84\xf4\xa2\x11\x58\x80\x5a\x63\x13\x4b\x6e\x43\x3b\xfd\xee\xbf\x91\x6d\xec\xfc\xbd\xfd\x2e\x30\xda\x7d\xef\x69\xb5\x6f\xd7\xd3\x29\x74\x61\x54\x65\x61\x8f\x0a\x59\x7d\x3a\x5d\x50\x1b\x55\x79\x11\x4d\x08\xe3\x88\x28\x8f\x9b\x80\x81\xef\xfe\x0a\x79\x52\x13\x9c\xa5\x31\xff\x94\x55\x26\x8e\xd2\x1c\x27\x30\x56\xda\xda\x8c\xe1\x3d\x06\xab\x94\x24\xf0\x47\x8d\x90\x70\x84\xd1\x04\xdd\xc9\x61\xdd\x49\xee\xac\xfe\x5b\x8d\xc6\x77\x9e\x37\x9d\x22\xac\x94\xb4\x0a\x12\x56\x6e\x73\x05\x5b\xc2\xd8\xb2\x52\xc8\xa4\x95\x28\xf7\xd8\xeb\x5c\x19\xe8\x02\xc9\x8d\x17\x32\x12\x70\x02\x1e\xcc\x56\x04\xd1\x02\x34\xe6\x20\x9b\x28\xe1\x49\x07\xf3\x3d\x00\xd0\x19\xea\x5a\x67\x58\xb3\xe8\x21\x60\xcf\xf8\x8d\x3c\x63\x4e\x16\x41\xba\xe2\x38\xa8\x42\x54\xb2\xc8\xca\x93\x70\x18\x7f\x3c\x69\x28\xae\x52\x71\xe5\x39\x59\x9a\xae\x56\x60\x64\x41\x18\xa1\x21\x49\xda\x16\xf8\x2e\xdd\x31\xca\x4a\x1f\x74\x21\x73\x51\x57\x39\x38\xd9\xf0\x9e\xd6\xe6\xcd\x8d\xf8\x4b\x5d\xbe\xc9\x5c\x39\x13\x4c\xa7\x30\x37\x38\xd7\xdb\x5c\xef\x90\xb2\x55\x83\x70\x8f\x11\xae\xd3\x2d\x68\x88\xd9\xcb\x59\xe1\x31\x60\xe1\x7d\xc0\xfc\x5f\x6e\x6f\xc7\x1f\xa4\x1b\x90\xd1\xff\x2a\xcc\xa2\x65\x44\xf9\x04\xcd\x05\x2e\xa0\x0b\x6c\x2f\x56\x99\x01\xe7\xfc\x18\xaa\x58\x94\x15\xb2\xfa\x9c\xeb\x9d\xb3\x23\x53\x56\xed\xac\x2e\x8b\x06\x7e\x52\x56\x36\x7e\xfc\x9a\xc4\x74\xd6\xf7\x72\xf4\xdf\xff\xa3\x89\xcb\x3b\x7a\xae\x5e\xb5\x33\xb0\xc7\x3a\x1b\xe5\x41\x35\x02\xbb\xc6\xe4\x4c\x48\x0b\x1e\x3d\x90\x84\x07\x0f\x6b\x3c\x45\xfc\xbe\x39\xe2\x8f\x98\x92\xa1\xeb\x57\xf9\x30\x65\x8c\x50\x2e\x7a\x46\x67\xd5\x39\xfb\x69\x5a\xcd\x4f\x18\xd3\x84\xb3\x20\xa2\x1c\x75\xa1\x5f\x6a\x25\xde\x79\x9b\xd2\xe8\xf7\x94\xf8\x6f\x63\xdd\x08\x7c\x26\x76\xa6\x77\x94\xf6\x34\xf6\xdc\xa4\xbb\x51\x97\x59\x06\x5b\xe9\xc3\x41\x55\x6e\xce\xdb\x87\x34\x7b\xf7\xe6\x4d\xbb\x32\xaf\x4f\x45\x3f\xea\x2c\x5a\x2e\x09\xeb\x00\xa2\x99\x72\x31\xa0\xbd\x19\x59\xc4\x8c\x20\x5d\xcf\x1d\x3a\xa6\xed\x1e\x78\x8b\x98\x81\x04\xe1\x3d\x58\xfc\xe4\x91\x0d\x09\x53\x4e\xb0\x66\x71\x48\xe6\x29\x23\x57\xb5\x41\x47\xb4\xb7\xfa\xdd\x4e\xba\x42\x75\x91\x29\xa3\x0c\xf6\x65\x85\x7d\xa5\x5e\x6a\x55\xd8\xfc\x82\x97\x5a\x55\x5a\x65\x5d\x99\xe6\x5a\x67\x44\xe7\x64\x03\x9d\xbd\xbe\xef\xdd\xb5\x20\xbc\x6f\xdf\xdd\x67\x5a\xb7\x14\x03\xa1\x0d\x7c\x05\x1d\x86\x77\x40\xf7\xb1\x6f\x09\xcd\xea\x7c\x20\xb8\xd8\x57\x84\x7e\x86\x7b\x7c\x9a\x44\x74\x89\x65\x44\xe1\xf7\xc9\x3f\x4d\x59\x6c\xc5\x59\xda\xa3\x28\xcf\xe6\x2b\x9d\xeb\x57\x65\xb8\xb6\x8b\x8c\xef\xbc\x1f\x01\x00\x00\xff\xff\x88\x7d\x5f\x45\x79\x05\x00\x00")

func _000011_create_s3_resources_mapping_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__000011_create_s3_resources_mapping_tableUpSql,
		"000011_create_s3_resources_mapping_table.up.sql",
	)
}

func _000011_create_s3_resources_mapping_tableUpSql() (*asset, error) {
	bytes, err := _000011_create_s3_resources_mapping_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "000011_create_s3_resources_mapping_table.up.sql", size: 1401, mode: os.FileMode(0644), modTime: time.Unix(1736323995, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3b, 0x99, 0x48, 0x73, 0xb4, 0xa8, 0x64, 0x4e, 0xb7, 0x7, 0xd7, 0xb8, 0xb6, 0xb, 0xc4, 0x27, 0xa4, 0xe7, 0x70, 0x68, 0x81, 0xd2, 0x99, 0xbd, 0x7d, 0x7, 0x9f, 0xba, 0x76, 0x2b, 0x73, 0x91}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"000001_create_cache_table.down.sql":                _000001_create_cache_tableDownSql,
	"000001_create_cache_table.up.sql":                  _000001_create_cache_tableUpSql,
	"000002_create_users_database.down.sql":             _000002_create_users_databaseDownSql,
	"000002_create_users_database.up.sql":               _000002_create_users_databaseUpSql,
	"000003_create_assistant_threads.down.sql":          _000003_create_assistant_threadsDownSql,
	"000003_create_assistant_threads.up.sql":            _000003_create_assistant_threadsUpSql,
	"000004_assistant_embeddings_add_uuid.down.sql":     _000004_assistant_embeddings_add_uuidDownSql,
	"000004_assistant_embeddings_add_uuid.up.sql":       _000004_assistant_embeddings_add_uuidUpSql,
	"000005_create_new_bookmarks_tables.down.sql":       _000005_create_new_bookmarks_tablesDownSql,
	"000005_create_new_bookmarks_tables.up.sql":         _000005_create_new_bookmarks_tablesUpSql,
	"000006_set_embeddings_to_nullable.down.sql":        _000006_set_embeddings_to_nullableDownSql,
	"000006_set_embeddings_to_nullable.up.sql":          _000006_set_embeddings_to_nullableUpSql,
	"000007_new_auth_flows.down.sql":                    _000007_new_auth_flowsDownSql,
	"000007_new_auth_flows.up.sql":                      _000007_new_auth_flowsUpSql,
	"000008_comprehensive_bookmarks.down.sql":           _000008_comprehensive_bookmarksDownSql,
	"000008_comprehensive_bookmarks.up.sql":             _000008_comprehensive_bookmarksUpSql,
	"000009_migrate_bookmarks_data.down.sql":            _000009_migrate_bookmarks_dataDownSql,
	"000009_migrate_bookmarks_data.up.sql":              _000009_migrate_bookmarks_dataUpSql,
	"000010_share_content.down.sql":                     _000010_share_contentDownSql,
	"000010_share_content.up.sql":                       _000010_share_contentUpSql,
	"000011_create_s3_resources_mapping_table.down.sql": _000011_create_s3_resources_mapping_tableDownSql,
	"000011_create_s3_resources_mapping_table.up.sql":   _000011_create_s3_resources_mapping_tableUpSql,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//
//	data/
//	  foo.txt
//	  img/
//	    a.png
//	    b.png
//
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"000001_create_cache_table.down.sql":                {_000001_create_cache_tableDownSql, map[string]*bintree{}},
	"000001_create_cache_table.up.sql":                  {_000001_create_cache_tableUpSql, map[string]*bintree{}},
	"000002_create_users_database.down.sql":             {_000002_create_users_databaseDownSql, map[string]*bintree{}},
	"000002_create_users_database.up.sql":               {_000002_create_users_databaseUpSql, map[string]*bintree{}},
	"000003_create_assistant_threads.down.sql":          {_000003_create_assistant_threadsDownSql, map[string]*bintree{}},
	"000003_create_assistant_threads.up.sql":            {_000003_create_assistant_threadsUpSql, map[string]*bintree{}},
	"000004_assistant_embeddings_add_uuid.down.sql":     {_000004_assistant_embeddings_add_uuidDownSql, map[string]*bintree{}},
	"000004_assistant_embeddings_add_uuid.up.sql":       {_000004_assistant_embeddings_add_uuidUpSql, map[string]*bintree{}},
	"000005_create_new_bookmarks_tables.down.sql":       {_000005_create_new_bookmarks_tablesDownSql, map[string]*bintree{}},
	"000005_create_new_bookmarks_tables.up.sql":         {_000005_create_new_bookmarks_tablesUpSql, map[string]*bintree{}},
	"000006_set_embeddings_to_nullable.down.sql":        {_000006_set_embeddings_to_nullableDownSql, map[string]*bintree{}},
	"000006_set_embeddings_to_nullable.up.sql":          {_000006_set_embeddings_to_nullableUpSql, map[string]*bintree{}},
	"000007_new_auth_flows.down.sql":                    {_000007_new_auth_flowsDownSql, map[string]*bintree{}},
	"000007_new_auth_flows.up.sql":                      {_000007_new_auth_flowsUpSql, map[string]*bintree{}},
	"000008_comprehensive_bookmarks.down.sql":           {_000008_comprehensive_bookmarksDownSql, map[string]*bintree{}},
	"000008_comprehensive_bookmarks.up.sql":             {_000008_comprehensive_bookmarksUpSql, map[string]*bintree{}},
	"000009_migrate_bookmarks_data.down.sql":            {_000009_migrate_bookmarks_dataDownSql, map[string]*bintree{}},
	"000009_migrate_bookmarks_data.up.sql":              {_000009_migrate_bookmarks_dataUpSql, map[string]*bintree{}},
	"000010_share_content.down.sql":                     {_000010_share_contentDownSql, map[string]*bintree{}},
	"000010_share_content.up.sql":                       {_000010_share_contentUpSql, map[string]*bintree{}},
	"000011_create_s3_resources_mapping_table.down.sql": {_000011_create_s3_resources_mapping_tableDownSql, map[string]*bintree{}},
	"000011_create_s3_resources_mapping_table.up.sql":   {_000011_create_s3_resources_mapping_tableUpSql, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = os.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
