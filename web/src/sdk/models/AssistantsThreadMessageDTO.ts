/* tslint:disable */
/* eslint-disable */
/**
 * Vibrain API
 * This is a simple API for Vibrain project.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: vibrain@vaayne.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 *
 * @export
 * @interface AssistantsThreadMessageDTO
 */
export interface AssistantsThreadMessageDTO {
  /**
   *
   * @type {Array<string>}
   * @memberof AssistantsThreadMessageDTO
   */
  attachments?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof AssistantsThreadMessageDTO
   */
  createdAt?: string;
  /**
   *
   * @type {string}
   * @memberof AssistantsThreadMessageDTO
   */
  id?: string;
  /**
   *
   * @type {object}
   * @memberof AssistantsThreadMessageDTO
   */
  metadata?: object;
  /**
   *
   * @type {string}
   * @memberof AssistantsThreadMessageDTO
   */
  model?: string;
  /**
   *
   * @type {string}
   * @memberof AssistantsThreadMessageDTO
   */
  role?: string;
  /**
   *
   * @type {string}
   * @memberof AssistantsThreadMessageDTO
   */
  text?: string;
  /**
   *
   * @type {string}
   * @memberof AssistantsThreadMessageDTO
   */
  threadId?: string;
  /**
   *
   * @type {number}
   * @memberof AssistantsThreadMessageDTO
   */
  token?: number;
  /**
   *
   * @type {string}
   * @memberof AssistantsThreadMessageDTO
   */
  updatedAt?: string;
  /**
   *
   * @type {string}
   * @memberof AssistantsThreadMessageDTO
   */
  userId?: string;
}

/**
 * Check if a given object implements the AssistantsThreadMessageDTO interface.
 */
export function instanceOfAssistantsThreadMessageDTO(
  value: object,
): value is AssistantsThreadMessageDTO {
  return true;
}

export function AssistantsThreadMessageDTOFromJSON(
  json: any,
): AssistantsThreadMessageDTO {
  return AssistantsThreadMessageDTOFromJSONTyped(json, false);
}

export function AssistantsThreadMessageDTOFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): AssistantsThreadMessageDTO {
  if (json == null) {
    return json;
  }
  return {
    attachments: json["attachments"] == null ? undefined : json["attachments"],
    createdAt: json["created_at"] == null ? undefined : json["created_at"],
    id: json["id"] == null ? undefined : json["id"],
    metadata: json["metadata"] == null ? undefined : json["metadata"],
    model: json["model"] == null ? undefined : json["model"],
    role: json["role"] == null ? undefined : json["role"],
    text: json["text"] == null ? undefined : json["text"],
    threadId: json["thread_id"] == null ? undefined : json["thread_id"],
    token: json["token"] == null ? undefined : json["token"],
    updatedAt: json["updated_at"] == null ? undefined : json["updated_at"],
    userId: json["user_id"] == null ? undefined : json["user_id"],
  };
}

export function AssistantsThreadMessageDTOToJSON(
  value?: AssistantsThreadMessageDTO | null,
): any {
  if (value == null) {
    return value;
  }
  return {
    attachments: value["attachments"],
    created_at: value["createdAt"],
    id: value["id"],
    metadata: value["metadata"],
    model: value["model"],
    role: value["role"],
    text: value["text"],
    thread_id: value["threadId"],
    token: value["token"],
    updated_at: value["updatedAt"],
    user_id: value["userId"],
  };
}
