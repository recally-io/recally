basePath: /api/v1.
definitions:
  assistants.AssistantDTO:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      metadata:
        $ref: '#/definitions/assistants.AssistantMetadata'
      model:
        type: string
      name:
        type: string
      system_prompt:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  assistants.AssistantMetadata:
    properties:
      rag_settings:
        $ref: '#/definitions/assistants.RagSettings'
      tools:
        description: Tools is a list of tools that the assistant can use
        items:
          type: string
        type: array
    type: object
  assistants.AttachmentDTO:
    properties:
      assistant_id:
        type: string
      created_at:
        type: string
      id:
        type: string
      metadata:
        $ref: '#/definitions/assistants.AttachmentMetadata'
      name:
        type: string
      size:
        type: integer
      thread_id:
        type: string
      type:
        type: string
      updated_at:
        type: string
      url:
        type: string
      user_id:
        type: string
    type: object
  assistants.AttachmentMetadata:
    type: object
  assistants.MessageDTO:
    properties:
      assistant_id:
        type: string
      completion_token:
        type: integer
      created_at:
        type: string
      embeddings:
        items:
          type: number
        type: array
      id:
        type: string
      metadata:
        $ref: '#/definitions/assistants.MessageMetadata'
      model:
        type: string
      prompt_token:
        type: integer
      role:
        type: string
      text:
        type: string
      thread_id:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  assistants.MessageMetadata:
    properties:
      images:
        items:
          type: string
        type: array
      intermediate_steps:
        items:
          $ref: '#/definitions/llms.IntermediateStep'
        type: array
      stream:
        type: boolean
      tools:
        items:
          type: string
        type: array
    type: object
  assistants.RagSettings:
    properties:
      enable:
        type: boolean
      multi_query:
        type: boolean
      query_rewrite:
        type: boolean
      rerank:
        type: boolean
    type: object
  assistants.ThreadDTO:
    properties:
      assistant_id:
        type: string
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      messages:
        items:
          $ref: '#/definitions/assistants.MessageDTO'
        type: array
      metadata:
        $ref: '#/definitions/assistants.ThreadMetadata'
      model:
        type: string
      name:
        type: string
      system_prompt:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  assistants.ThreadMetadata:
    properties:
      is_generated_title:
        type: boolean
      rag_settings:
        $ref: '#/definitions/assistants.RagSettings'
      tools:
        description: Tools is a list of tools that the assistant can use
        items:
          type: string
        type: array
    type: object
  bookmarks.BookmarkContentDTO:
    properties:
      content:
        type: string
      created_at:
        type: string
      description:
        type: string
      domain:
        type: string
      html:
        type: string
      id:
        type: string
      metadata:
        $ref: '#/definitions/bookmarks.BookmarkContentMetadata'
      s3_key:
        type: string
      summary:
        type: string
      tags:
        items:
          type: string
        type: array
      title:
        type: string
      type:
        $ref: '#/definitions/bookmarks.ContentType'
      updated_at:
        type: string
      url:
        type: string
      user_id:
        type: string
    type: object
  bookmarks.BookmarkContentFileMetadata:
    properties:
      extension:
        type: string
      mime_type:
        type: string
      name:
        type: string
      page_count:
        type: integer
      size:
        type: integer
    type: object
  bookmarks.BookmarkContentMetadata:
    properties:
      author:
        type: string
      cover:
        type: string
      description:
        type: string
      domain:
        type: string
      favicon:
        type: string
      file:
        $ref: '#/definitions/bookmarks.BookmarkContentFileMetadata'
      published_at:
        type: string
      site_name:
        type: string
    type: object
  bookmarks.BookmarkDTO:
    properties:
      content:
        $ref: '#/definitions/bookmarks.BookmarkContentDTO'
      content_id:
        type: string
      created_at:
        type: string
      id:
        type: string
      is_archive:
        type: boolean
      is_favorite:
        type: boolean
      is_public:
        type: boolean
      metadata:
        $ref: '#/definitions/bookmarks.BookmarkMetadata'
      share:
        $ref: '#/definitions/bookmarks.BookmarkShareDTO'
      tags:
        items:
          type: string
        type: array
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  bookmarks.BookmarkMetadata:
    properties:
      highlights:
        items:
          $ref: '#/definitions/bookmarks.Highlight'
        type: array
      last_read_at:
        type: string
      reading_progress:
        type: integer
    type: object
  bookmarks.BookmarkShareDTO:
    properties:
      bookmark_id:
        type: string
      created_at:
        type: string
      expires_at:
        type: string
      id:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  bookmarks.ContentType:
    enum:
    - bookmark
    - pdf
    - epub
    - rss
    - newsletter
    - image
    - audio
    - video
    type: string
    x-enum-varnames:
    - ContentTypeBookmark
    - ContentTypePDF
    - ContentTypeEPUB
    - ContentTypeRSS
    - ContentTypeNewsletter
    - ContentTypeImage
    - ContentTypeAudio
    - ContentTypeVideo
  bookmarks.DomainDTO:
    properties:
      count:
        type: integer
      name:
        type: string
    type: object
  bookmarks.Highlight:
    properties:
      end_offset:
        type: integer
      id:
        type: string
      note:
        type: string
      start_offset:
        type: integer
      text:
        type: string
    type: object
  bookmarks.TagDTO:
    properties:
      count:
        type: integer
      name:
        type: string
    type: object
  httpserver.JSONResult:
    description: JSONResult represents the structure of the JSON response.
    properties:
      code:
        description: Code is an integer value that represents the HTTP status code.
        example: 200
        type: integer
      data:
        description: Data is an interface value that represents the data of the response.
      error:
        description: Error is an error value that represents the error of the response.
      message:
        description: Message is a string value that represents the message of the
          response.
        example: OK
        type: string
      success:
        description: Success is a boolean value that indicates whether the request
          was successful.
        type: boolean
    type: object
  httpserver.createAssistantRequest:
    properties:
      description:
        type: string
      metadata:
        properties:
          tools:
            items:
              type: string
            type: array
        type: object
      model:
        type: string
      name:
        type: string
      system_prompt:
        type: string
    required:
    - name
    type: object
  httpserver.createBookmarkRequest:
    properties:
      content:
        type: string
      description:
        type: string
      html:
        type: string
      metadata:
        $ref: '#/definitions/bookmarks.BookmarkContentMetadata'
      s3_key:
        type: string
      tags:
        items:
          type: string
        type: array
      title:
        type: string
      type:
        allOf:
        - $ref: '#/definitions/bookmarks.ContentType'
        enum:
        - bookmark
        - pdf
        - epub
        - image
        - audio
        - video
      url:
        type: string
    required:
    - type
    type: object
  httpserver.createBookmarkShareRequest:
    properties:
      bookmarkID:
        type: string
      expires_at:
        type: string
    required:
    - bookmarkID
    type: object
  httpserver.createThreadMessageRequest:
    properties:
      assistantId:
        type: string
      metadata:
        properties:
          images:
            items:
              type: string
            type: array
          tools:
            items:
              type: string
            type: array
        type: object
      model:
        type: string
      role:
        type: string
      text:
        type: string
      threadId:
        type: string
    required:
    - assistantId
    - role
    - text
    - threadId
    type: object
  httpserver.listBookmarksResponse:
    properties:
      bookmarks:
        items:
          $ref: '#/definitions/bookmarks.BookmarkDTO'
        type: array
      limit:
        type: integer
      offset:
        type: integer
      total:
        type: integer
    type: object
  httpserver.refreshBookmarkRequest:
    properties:
      bookmarkID:
        type: string
      fetcher:
        enum:
        - http
        - jinaReader
        - browser
        type: string
      is_proxy_image:
        type: boolean
      regenerate_summary:
        type: boolean
    required:
    - bookmarkID
    type: object
  httpserver.updateAssistantRequest:
    properties:
      assistantId:
        type: string
      description:
        type: string
      metadata:
        properties:
          tools:
            items:
              type: string
            type: array
        type: object
      model:
        type: string
      name:
        type: string
      system_prompt:
        type: string
    required:
    - assistantId
    - name
    type: object
  httpserver.updateBookmarkRequest:
    properties:
      bookmarkID:
        type: string
      content:
        type: string
      html:
        type: string
      metadata:
        $ref: '#/definitions/bookmarks.BookmarkContentMetadata'
      summary:
        type: string
    required:
    - bookmarkID
    type: object
  llms.IntermediateStep:
    properties:
      input: {}
      name:
        type: string
      output: {}
      type:
        type: string
    type: object
info:
  contact:
    email: recally@vaayne.com
    name: Vaayne
    url: https://vaayne.com
  description: This is a simple API for Recally project.
  termsOfService: https://recally.vaayne.com/terms/
  title: Recally API
  version: "1.0"
paths:
  /assistants:
    get:
      consumes:
      - application/json
      description: Lists the assistants for a user
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/assistants.AssistantDTO'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
      summary: List Assistants
      tags:
      - Assistants
    post:
      consumes:
      - application/json
      description: Creates a new assistant
      parameters:
      - description: Assistant
        in: body
        name: assistant
        required: true
        schema:
          $ref: '#/definitions/httpserver.createAssistantRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  $ref: '#/definitions/assistants.AssistantDTO'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
      summary: Create Assistant
      tags:
      - Assistants
  /assistants/{assistant-id}:
    delete:
      consumes:
      - application/json
      description: Deletes an existing assistant
      parameters:
      - description: Assistant ID
        in: path
        name: assistant-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
      summary: Delete Assistant
      tags:
      - Assistants
    get:
      responses: {}
    put:
      consumes:
      - application/json
      description: Updates an existing assistant
      parameters:
      - description: Assistant ID
        in: path
        name: assistant-id
        required: true
        type: string
      - description: Assistant
        in: body
        name: assistant
        required: true
        schema:
          $ref: '#/definitions/httpserver.updateAssistantRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  $ref: '#/definitions/assistants.AssistantDTO'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
      summary: Update Assistant
      tags:
      - Assistants
  /assistants/{assistant-id}/attachments:
    get:
      responses: {}
    post:
      consumes:
      - application/json
      description: Uploads an attachment to an assistant
      parameters:
      - description: Assistant ID
        in: path
        name: assistant-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  $ref: '#/definitions/assistants.AttachmentDTO'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
      summary: Upload Assistant Attachment
      tags:
      - Assistants
  /assistants/{assistant-id}/threads:
    get:
      consumes:
      - application/json
      description: Lists the threads for an assistant
      parameters:
      - description: Assistant ID
        in: path
        name: assistant-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/assistants.ThreadDTO'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
      summary: List Threads
      tags:
      - Assistants
    post:
      consumes:
      - application/json
      description: Creates a new thread under an assistant
      parameters:
      - description: Assistant ID
        in: path
        name: assistant-id
        required: true
        type: string
      - description: Thread
        in: body
        name: thread
        required: true
        schema:
          $ref: '#/definitions/assistants.ThreadDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  $ref: '#/definitions/assistants.ThreadDTO'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
      summary: Create Thread
      tags:
      - Assistants
  /assistants/{assistant-id}/threads/{thread-id}:
    delete:
      responses: {}
    get:
      consumes:
      - application/json
      description: Retrieves a thread by ID
      parameters:
      - description: Thread ID
        in: path
        name: thread-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  $ref: '#/definitions/assistants.ThreadDTO'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
      summary: Get Thread
      tags:
      - Assistants
    put:
      consumes:
      - application/json
      description: Updates an existing thread under an assistant
      parameters:
      - description: Assistant ID
        in: path
        name: assistant-id
        required: true
        type: string
      - description: Thread ID
        in: path
        name: thread-id
        required: true
        type: string
      - description: Thread
        in: body
        name: thread
        required: true
        schema:
          $ref: '#/definitions/assistants.ThreadDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  $ref: '#/definitions/assistants.ThreadDTO'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
      summary: Update Thread
      tags:
      - Assistants
  /assistants/{assistant-id}/threads/{thread-id}/attachments:
    get:
      responses: {}
    post:
      consumes:
      - application/json
      description: Uploads an attachment to a thread
      parameters:
      - description: Assistant ID
        in: path
        name: assistant-id
        required: true
        type: string
      - description: Thread ID
        in: path
        name: thread-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  $ref: '#/definitions/assistants.AttachmentDTO'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
      summary: Upload Thread Attachment
      tags:
      - Assistants
  /assistants/{assistant-id}/threads/{thread-id}/generate-title:
    post:
      responses: {}
  /assistants/{assistant-id}/threads/{thread-id}/messages:
    get:
      consumes:
      - application/json
      description: Lists the messages for a thread
      parameters:
      - description: Assistant ID
        in: path
        name: assistant-id
        required: true
        type: string
      - description: Thread ID
        in: path
        name: thread-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/assistants.MessageDTO'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
      summary: List Thread Messages
      tags:
      - Assistants
    post:
      consumes:
      - application/json
      description: Creates a new message in a specified thread
      parameters:
      - description: Assistant ID
        in: path
        name: assistant-id
        required: true
        type: string
      - description: Thread ID
        in: path
        name: thread-id
        required: true
        type: string
      - description: Thread Message
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/httpserver.createThreadMessageRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  $ref: '#/definitions/assistants.MessageDTO'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
      summary: Create Thread Message
      tags:
      - Assistants
  /assistants/{assistant-id}/threads/{thread-id}/messages/{message-id}:
    delete:
      responses: {}
    put:
      responses: {}
  /assistants/models:
    get:
      responses: {}
  /auth/login:
    post:
      responses: {}
  /auth/logout:
    post:
      responses: {}
  /auth/register:
    post:
      responses: {}
  /auth/user/info:
    put:
      responses: {}
  /auth/user/password:
    put:
      responses: {}
  /auth/user/settings:
    put:
      responses: {}
  /auth/validate-jwt:
    get:
      responses: {}
  /bookmarks:
    delete:
      consumes:
      - application/json
      description: Deletes all bookmarks for a user
      parameters:
      - description: User ID
        in: query
        name: user-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
      summary: Delete User Bookmarks
      tags:
      - Bookmarks
    get:
      consumes:
      - application/json
      description: Lists bookmarks for a user with pagination
      parameters:
      - default: 10
        description: Number of items per page
        in: query
        name: limit
        type: integer
      - default: 0
        description: Number of items to skip
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  $ref: '#/definitions/httpserver.listBookmarksResponse'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
      summary: List Bookmarks
      tags:
      - Bookmarks
    post:
      consumes:
      - application/json
      description: Creates a new bookmark for the user
      parameters:
      - description: Bookmark to create
        in: body
        name: bookmark
        required: true
        schema:
          $ref: '#/definitions/httpserver.createBookmarkRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  $ref: '#/definitions/bookmarks.BookmarkDTO'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
      summary: Create Bookmark
      tags:
      - Bookmarks
  /bookmarks/{bookmark-id}:
    delete:
      consumes:
      - application/json
      description: Deletes a bookmark
      parameters:
      - description: Bookmark ID
        in: path
        name: bookmark-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
      summary: Delete Bookmark
      tags:
      - Bookmarks
    get:
      consumes:
      - application/json
      description: Gets a specific bookmark by ID
      parameters:
      - description: Bookmark ID
        in: path
        name: bookmark-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  $ref: '#/definitions/bookmarks.BookmarkDTO'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
      summary: Get Bookmark
      tags:
      - Bookmarks
    put:
      consumes:
      - application/json
      description: Updates an existing bookmark
      parameters:
      - description: Bookmark ID
        in: path
        name: bookmark-id
        required: true
        type: string
      - description: Updated bookmark data
        in: body
        name: bookmark
        required: true
        schema:
          $ref: '#/definitions/httpserver.updateBookmarkRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  $ref: '#/definitions/bookmarks.BookmarkDTO'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
      summary: Update Bookmark
      tags:
      - Bookmarks
  /bookmarks/{bookmark-id}/refresh:
    post:
      consumes:
      - application/json
      description: Refreshes bookmark content and/or regenerates AI summary
      parameters:
      - description: Bookmark ID
        in: path
        name: bookmark-id
        required: true
        type: string
      - description: Refresh options
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/httpserver.refreshBookmarkRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  $ref: '#/definitions/bookmarks.BookmarkDTO'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
      summary: Refresh Bookmark
      tags:
      - Bookmarks
  /bookmarks/{bookmark-id}/share:
    delete:
      consumes:
      - application/json
      description: Revokes sharing access for a bookmark
      parameters:
      - description: Bookmark ID
        in: path
        name: bookmark-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
      summary: Delete Shared Bookmark
      tags:
      - Bookmarks
    get:
      consumes:
      - application/json
      description: Gets sharing information for a bookmark
      parameters:
      - description: Bookmark ID
        in: path
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  $ref: '#/definitions/bookmarks.BookmarkContentDTO'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
      summary: Get Shared Bookmark
      tags:
      - Bookmarks
    post:
      consumes:
      - application/json
      description: Creates a shareable link for a bookmark
      parameters:
      - description: Bookmark ID
        in: path
        name: bookmark-id
        required: true
        type: string
      - description: Share options
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/httpserver.createBookmarkShareRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  $ref: '#/definitions/bookmarks.BookmarkShareDTO'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
      summary: Share Bookmark
      tags:
      - Bookmarks
    put:
      consumes:
      - application/json
      description: Updates sharing settings for a bookmark
      parameters:
      - description: Bookmark ID
        in: path
        name: bookmark-id
        required: true
        type: string
      - description: Update options
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/httpserver.createBookmarkShareRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  $ref: '#/definitions/bookmarks.BookmarkShareDTO'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
      summary: Update Shared Bookmark
      tags:
      - Bookmarks
  /bookmarks/domains:
    get:
      consumes:
      - application/json
      description: Lists all domains from user's bookmarks
      produces:
      - application/json
      responses:
        "200":
          description: Success - Returns array of domains with counts
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/bookmarks.DomainDTO'
                  type: array
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
      summary: List Domains
      tags:
      - Bookmarks
  /bookmarks/tags:
    get:
      consumes:
      - application/json
      description: Lists all tags for a user's bookmarks
      produces:
      - application/json
      responses:
        "200":
          description: Success - Returns array of tags with counts
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/bookmarks.TagDTO'
                  type: array
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/httpserver.JSONResult'
            - properties:
                data:
                  type: object
              type: object
      summary: List Tags
      tags:
      - Bookmarks
  /files/{id}:
    delete:
      responses: {}
    get:
      responses: {}
  /files/presigned-urls:
    get:
      responses: {}
  /keys:
    get:
      responses: {}
    post:
      responses: {}
  /keys/{id}:
    delete:
      responses: {}
  /llm/models:
    get:
      responses: {}
  /llm/tools:
    get:
      responses: {}
  /shared/files/{key}:
    head:
      responses: {}
swagger: "2.0"
